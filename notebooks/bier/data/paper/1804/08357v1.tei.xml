<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/ResearchCloud/Projects/ExoPlanets/notebooks/grobid/grobid-0.5.2/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.2" ident="GROBID" when="2019-01-22T13:34+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">PyMieDAP : a Python-Fortran tool to compute fluxes and polarization signals of (exo)planets</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2018-10-18">October 18, 2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Lo¨ıc</forename><surname>Lo¨ıc</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Aerospace Engineering</orgName>
								<orgName type="institution">Technical University Delft</orgName>
								<address>
									<addrLine>Kluyverweg 2</addrLine>
									<postCode>2629 HS</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Javier</forename><surname>Rossi</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Aerospace Engineering</orgName>
								<orgName type="institution">Technical University Delft</orgName>
								<address>
									<addrLine>Kluyverweg 2</addrLine>
									<postCode>2629 HS</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Daphne</forename><forename type="middle">M</forename><surname>Berzosa-Molina</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Aerospace Engineering</orgName>
								<orgName type="institution">Technical University Delft</orgName>
								<address>
									<addrLine>Kluyverweg 2</addrLine>
									<postCode>2629 HS</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><surname>Stam</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Faculty of Aerospace Engineering</orgName>
								<orgName type="institution">Technical University Delft</orgName>
								<address>
									<addrLine>Kluyverweg 2</addrLine>
									<postCode>2629 HS</postCode>
									<settlement>Delft</settlement>
									<country key="NL">The Netherlands</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">PyMieDAP : a Python-Fortran tool to compute fluxes and polarization signals of (exo)planets</title>
					</analytic>
					<monogr>
						<imprint>
							<date type="published" when="2018-10-18">October 18, 2018</date>
						</imprint>
					</monogr>
					<note type="submission">Received xx yy 2018 / Accepted xx yyy 2018</note>
					<note>Astronomy &amp; Astrophysics manuscript no. paper˙database c ESO 2018</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>
					<term>planets and satellites: atmospheres</term>
					<term>polarization</term>
					<term>radiative transfer</term>
				</keywords>
			</textClass>
			<abstract>
				<p>PyMieDAP (the Python Mie Doubling-Adding Programme) is a Python-based tool for computing the total, linearly, and circularly polarized fluxes of incident unpolarized sun-or starlight that is reflected by, respectively, Solar System planets or moons, or exo-planets at a range of wavelengths. The radiative transfer computations are based on an adding-doubling Fortran algorithm and fully include polarization for all orders of scattering. The model (exo)planets are described by a model atmosphere composed of a stack of homogeneous layers containing gas and/or aerosol and/or cloud particles bounded below by an isotropically, depolarizing surface (that is optionally black). The reflected light can be computed spatially-resolved and/or disk-integrated. Spatially-resolved signals are mostly representative for observations of Solar System planets (or moons), while disk-integrated signals are mostly representative for exoplanet observations. PyMieDAP is modular and flexible, and allows users to adapt and optimize the code according to their needs. PyMieDAP keeps options open for connections with external programs and for future additions and extensions. In this paper, we describe the radiative transfer algorithm that PyMieDAP is based on and the code&apos;s principal functionalities. And we provide benchmark results of PyMieDAP that can be used for testing its installation and for comparison with other codes. PyMieDAP is available online under the GNU GPL license at</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.">Introduction</head><p>Light is usually described only by its total flux, and usually, the total flux is the only parameter that is measured when observing sunlight that is reflected by the Earth or other planets in the Solar System. A full description of light, however, requires its state of polarization. The state of polarization includes the degree of polarization, P, i.e. the ratio of the polarized flux to the total -polarized plus unpolarized-flux, and the direction of polarization, χ. The polarized flux can be subdivided into the linearly polarized flux and the circularly polarized flux. Similarly, the degree of polarization P can be subdivided into the degree of linear polarization P l and the degree of circular polarization P c . An excellent description of the polarization of light that is reflected by planetary atmospheres and surfaces can be found in <ref type="bibr" target="#b13">Hansen &amp; Travis (1974)</ref>. That paper also includes various methods to compute the state of polarization of light that is reflected by a planet, amongst others the so-called adding-doubling method, that is employed by PyMieDAP, the code that is the topic of this paper.</p><p>There are several reasons for measuring the state of polarization of sunlight that is reflected by a planet, or starlight that is reflected by an exoplanet. A first advantage of polarimetry comes from the fact that the light of a solar type star can be considered to be unpolarized when integrated across the stellar disk. This is known to be true for our Sun ( <ref type="bibr" target="#b17">Kemp et al. 1987)</ref>, and is also supported by other studies of nearby FGK stars: for example, <ref type="bibr" target="#b6">Cotton et al. (2017)</ref> show that while active stars can present polarizations up to 45 ppm, non-active stars have very limited and practically negligeable intrinsic polarisation. Meanwhile, light that is scattered within a planetary atmosphere and/or that is reflected by the planetary surface will usually be (linearly) polarized. For exoplanets, polarimetry could thus allow distinguishing the very faint planetary signal from the much brighter stellar light. In addition, the measurement of a polarized signal would immediately confirm the nature of the object. <ref type="bibr">Seager et al. (2000)</ref> present numerically simulated degrees of (linear) polarization of the combined light of a star and various types of orbiting gaseous planets. When planets are spatially unresolved from their star, the degree of polarization of the system as a whole is the ratio of the polarized planetary flux to the sum of the total planetary flux and the stellar flux. This degree of polarization is obviously very small, i.e. on the order of 10 −6 <ref type="bibr">(Seager et al. 2000)</ref>. <ref type="bibr" target="#b34">Stam et al. (2004)</ref> present numerically simulated degrees of (linear) polarization of spatially resolved gaseous planets. For these planets, the degree of polarization can reach several tens of percent, depending on the physical properties of the planet and the planetary phase angle, because they do not include the huge, unpolarized stellar signal. Clearly, the degree of polarization that can be observed for a given exoplanet will depend not only on the intrinsic degree of polarization of the planet, but also on the stellar flux in the background of the planetary signal.</p><p>Another interesting use of polarimetry is the characterization of the planetary object. The degree and direction of polarization of light that has been scattered by a planet (locally or disk-integrated) is very sensitive to the properties of the atmospheric scatterers (size, shape, composition), their spatial distribution, and/or to the reflection properties of the planetary surface (bidirectional reflection, albedo) (see e.g. <ref type="bibr" target="#b13">Hansen &amp; Travis 1974;</ref><ref type="bibr">Mishchenko et al. 2002, and references therein)</ref>, if present. In particular, multiple scattering of light randomizes and hence depolarizes the light, and adds mainly unpolarized light to the reflected signal. The angular dependence of the degree and direction of polarization of the reflected signal thus preserves the angular patterns of the light that is singly scattered by the atmospheric particles or the surface, and that is characteristic for the microphysical properties of the scatterers. A famous application of the use of polarimetry for the characterization of a planetary atmosphere is the retrieval of the composition and size of the cloud particles in Venus' upper clouds using disk-integrated polarimetry (with Earth-based telescopes) at a range of phase angles and several wavelengths <ref type="bibr" target="#b12">(Hansen &amp; Hovenier 1974)</ref>. This information could not be derived from total flux measurements, because the total flux is less sensitive to the composition and size of the scattering particles. Indeed, various types of cloud particles would provide a fit to the total flux measurements.</p><p>Even if one were not interested in measurements of polarization and the analysis of polarization data, there are compelling reasons to include polarization in the computation of total fluxes.</p><p>Firstly, because light is fully described by a vector and scattering processes by matrices, ignoring polarization can induce errors up to several percent in computed total fluxes both locally and disk-integrated ( <ref type="bibr" target="#b19">Mishchenko et al. 1994;</ref>. In particular, in gaseous absorption bands, where the linear polarization usually differs from the polarization in the continuum ( <ref type="bibr" target="#b10">Fauchez et al. 2017;</ref><ref type="bibr" target="#b3">Boesche et al. 2009;</ref><ref type="bibr" target="#b35">Stammes et al. 1994;</ref><ref type="bibr" target="#b0">Aben et al. 1997)</ref>, such errors will lead to errors in derived gas mixing ratios and e.g. cloud top altitudes .</p><p>Secondly, many spectrometers are sensitive to the state of polarization of the incoming light because of the optical properties of mirrors and e.g. gratings. Knowing the polarization sensitivity of your instrument, for example, through calibration in an optical laboratory, is not sufficient to correct total flux measurements for the state of polarization of the incoming light if the polarization of the light is not known ). However, one could include the computed state of polarization of the observed light, combined with the instrument's polarization sensitivity in the retrieval of the total fluxes. A reason why polarization is usually ignored in radiative transfer computations is probably that codes that fully include polarization for all orders of scattering are more complex than codes that ignore polarization, because the latter treat light as a scalar and scattering processes as described by scalars, while the former have to use vectors and matrices. Polarized radiative transfer codes therefore usually also require more computation time than scalar codes.</p><p>In this paper, we present PyMieDAP, a user-friendly, modular, Python-based tool for computing the total and polarized fluxes of light that is reflected by (exo)planets. <ref type="bibr">1</ref> The radiative transfer computations in PyMieDAP are performed with an adding-doubling algorithm written in Fortran, as described by <ref type="bibr" target="#b7">(de Haan et al. 1987)</ref>, while input and output are handled with Python code. <ref type="figure" target="#fig_0">Figure 1</ref> provides a view of the modules composing PyMieDAP. The blue boxes represent codes written in Fortran, and the red boxes Python code. Arrows indicate interfaces using f2py <ref type="bibr" target="#b24">(Peterson 2009</ref>). Each PyMieDAP module will be described in more detail in this paper.</p><p>The structure of this paper is as follows. Section 2 provides the definitions of the vector elements that describe the state of polarization of light as used in PyMieDAP. Section 3 contains the formulae required to calculate the Stokes vectors of sun-or starlight that is locally reflected by a region on a planet for a range of illumination and viewing geometries. The components of the Fourier-series decomposition of these vectors are stored in files in a database that is accessed to compute reflected light vectors for specific geometries. Section 4 describes the computation of the single scattering properties of atmospheric gases and aerosols, and the reflection by the surface. Section 5 describes the adding-doubling radiative transfer algorithm used in PyMieDAP . Section 6 presents the method used to compute the geometries for locally reflected light, and describes how previously stored database files are used to compute the locally reflected light vector as well as how to integrate these locally reflected light vectors across the illuminated and visible part of a planetary disk, in order to obtain the disk-integrated Stokes vector. In Sect. 7, we compare reflected Stokes vectors obtained with PyMieDAP against previously published results obtained using a similar adding-doubling radiative transfer algorithm without the intermediate step of using pre-calculated database files, and without the Python shell. Section 8 summarizes the paper and discusses future work. Appendix A provides a detailed description of the format of the database files that is used in the codes. Appendix B provides equations for the computation of some angles used in the code.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.">Defining the flux and polarization of light</head><p>The radiance ('intensity') and state of polarization of a quasimonochromatic beam of light can be described by a Stokes vector I as follows (see, e.g. <ref type="bibr" target="#b13">Hansen &amp; Travis 1974;</ref><ref type="bibr" target="#b15">Hovenier et al. 2004</ref>)</p><formula xml:id="formula_0">I =              I Q U V              .<label>(1)</label></formula><p>Here, Stokes parameter I is the total radiance, Q and U describe the linearly polarized radiances, and V the circularly polarized radiance. All four parameters have the dimension W m −2 sr −1 (or W m −3 sr −1 if taken as functions of the wavelength λ). We will also use the irradiance or flux vector πF = π[F, Q, U, V], of which all parameters have the dimension W m −2 (or W m −3 if taken as functions of λ). Unless specified otherwise, the equations in this paper also hold for flux vector πF. Parameters Q and U are defined with respect to a reference plane. We use two types of reference planes:</p><p>1. The local meridian plane, which contains the local zenith direction and the direction of propagation of the light. The local meridian plane is used in the computation of Q and U of locally reflected light. 2. The planetary scattering plane, which contains the centre of the planet, and the directions to the centre of the star and to the observer. This plane is mainly used to define Q and U of light that has been reflected by the planet as a whole, e.g. for simulating signals of (spatially unresolved) exoplanets.</p><p>Parameters Q and U can be transformed from one reference plane to another using a so-called rotation matrix L (see <ref type="bibr" target="#b16">Hovenier &amp; van der Mee 1983</ref>) with β the angle between the two reference planes, measured rotating in the anti-clockwise direction from the old to the new reference plane when looking towards the observer (β ≥ 0 • ). In PyMieDAP, the default reference plane for local reflections and disk-integrated reflected light, is the planetary scattering plane. For locally reflected light, the vector that is computed with respect to the local meridian plane is rotated to be defined with respect to the planetary scattering plane before being provided as output. As a planet orbits its star, the planetary scattering plane will usually rotate on the sky as seen from the observer, except if the orientation of the orbit is edge-on with respect to the observer (see <ref type="figure" target="#fig_2">Fig. 2</ref>). By applying additional rotations, Stokes vectors defined with respect to the planetary scattering plane can straightforwardly be redefined to e.g. the optical plane of an instrument or the detector (for a detailed description of these rotations, see .</p><formula xml:id="formula_1">L(β) =              1 0 0 0 0 cos 2β sin 2β 0 0 − sin 2β cos 2β 0 0 0 0 1              ,<label>(2)</label></formula><p>The degree of polarization of the beam of light described by vector I (Eq. 1) is defined as</p><formula xml:id="formula_2">P = Q 2 + U 2 + V 2 I .<label>(3)</label></formula><p>The degree of linear polarization is defined as</p><formula xml:id="formula_3">P l = Q 2 + U 2 I ,<label>(4)</label></formula><p>and the degree of circular polarization as</p><formula xml:id="formula_4">P c = V I .<label>(5)</label></formula><p>While the degree of linear polarization is independent of the choice of reference plane for Stokes parameters Q and U, the  </p><p>The value of χ is chosen in the interval [0 • , 180 • , and such that cos 2χ has the same sign as Q (see <ref type="bibr" target="#b13">Hansen &amp; Travis 1974)</ref>.</p><p>If U = 0, the direction of polarization of the light is either perpendicular (Q &lt; 0, χ = 90 • ) or parallel (Q &gt; 0, χ = 0 • ) to the reference plane. In that case, we can use an alternative definition of the degree of linear polarization that captures the information about the direction of polarization, namely</p><formula xml:id="formula_6">P ls = − Q I ,<label>(7)</label></formula><p>where P ls &gt; 0 (P ls &lt; 0) corresponds with light that is polarized perpendicularly (parallel) to the reference plane.</p><p>Regarding the circular polarization (Eq. 5), our convention for the sign is as follows: V and thus P c is positive when the observer sees the electric vector of the light rotating in the anticlockwise direction, and V and thus P c is negative, when the observer sees the vector rotating in the clockwise direction.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.">Calculating reflected light</head><p>With PyMieDAP, one can calculate the Stokes vector I (cf. Eq. 1) of light that is locally reflected by a planet. Here, we refer to locally reflected light if a single combination of illumination and viewing geometries involved in the reflection process applies. With PyMieDAP, one can also integrate Stokes vectors of locally reflected light across the planet, taking into account variations of the atmospheric properties and/or surface albedo, as well as the variations of the illumination and viewing geometries.</p><p>Below, we explain the calculation of the locally reflected light (Sect. 3.1) and the integration of locally reflected light across the illuminated and visible part of a planetary disk (Sect. 3.2). The integration over a smaller part of a planet could straightforwardly be derived from the latter explanation 2 .</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1.">Calculating locally reflected light</head><p>We calculate a locally reflected vector I (see Eq. 1) according to <ref type="bibr">(see Hansen &amp; Travis 1974)</ref> </p><formula xml:id="formula_7">I(µ, µ 0 , φ − φ 0 , λ) = µ 0 R(µ, µ 0 , φ − φ 0 , λ) F 0 (λ),<label>(8)</label></formula><p>with <ref type="formula">F</ref>  In PyMieDAP, it is assumed that the incident sun or starlight is unpolarized ( <ref type="bibr" target="#b17">Kemp et al. 1987)</ref>, although this assumption is not inherent to the radiative transfer algorithm (de Haan et al. <ref type="bibr">2</ref> This has not yet been implemented in PyMieDAP 1987), and PyMieDAP could easily be adapted for polarized incident light. Vector F 0 of the light that is incident on a model planet thus equals the column vector <ref type="bibr">[F 0</ref> </p><formula xml:id="formula_8">, 0, 0, 0] or F 0 [1, 0, 0, 0],</formula><p>where F 0 equals the total incident solar/stellar flux measured perpendicular to the direction of incidence divided by π (see <ref type="bibr" target="#b13">Hansen &amp; Travis 1974)</ref>. For example, if the total incident flux measured perpendicular to the direction of incidence equals</p><formula xml:id="formula_9">S 0 W m −2 , F 0 = S 0 /π W m −2 .</formula><p>With the assumption of unpolarized incident sun or starlight, only the elements of R 1 , the first column of the 4 × 4 local planetary reflection matrix R are relevant for the calculation of the locally reflected vector I, since Eq. 8 then transforms into</p><formula xml:id="formula_10">I(µ, µ 0 , φ − φ 0 , λ) = µ 0 R 1 (µ, µ 0 , φ − φ 0 , λ) F 0 (λ).<label>(9)</label></formula><p>The local reflection vector R 1 depends on the illumination and viewing geometries and the properties of the local planetary atmosphere and surface. The user can provide PyMieDAP with a list of illumination and viewing geometries, e.g. geometries that pertain to observations from a satellite that orbits a planet. Given the properties of the local atmosphere and surface, the calculation of R 1 and subsequently I is performed by PyMieDAP as described in Sect. 5. Note that locally reflected light vector I as described by Eq. 9 is defined with respect to the local meridian plane. PyMieDAP will redefine it with respect to the planetary scattering plane by calculating the local angle β and applying the rotation matrix L as defined in Eq. 2.</p><p>In case circular polarization is ignored, vector R 1 and reflected light vector I each comprise only 3 elements. In case circular and linear polarization are both ignored, R 1 and I are scalars, and Eq. 9 could be written as</p><formula xml:id="formula_11">I(µ, µ 0 , φ − φ 0 , λ) = µ 0 R 1 (µ, µ 0 , φ − φ 0 , λ) F 0 (λ).<label>(10)</label></formula><p>Contrary to ignoring linear polarization, ignoring circular polarization usually only leads to very small errors in the computed total and linearly polarized fluxes ).</p><p>In the following, we will assume polarization (both linear and circular) is taken into account and use vectors and matrices instead of scalars.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.">Calculating disk-integrated reflected light</head><p>To calculate signals of spatially unresolved planets, such as exoplanets, we integrate the locally reflected starlight as given by Eqs. 9 and 10, over the illuminated and visible part of the planetary disk, according to (see <ref type="bibr">Stam et al. 2006, Eq. 16)</ref> </p><formula xml:id="formula_12">πF(α, λ) = 1 d 2 µL(β)I(µ, µ 0 , φ − φ 0 , λ)dO (11) = 1 d 2 µµ 0 L(β)R 1 (µ, µ 0 , φ − φ 0 , λ)F 0 (λ)dO. (12)</formula><p>Here, πF is the flux vector of the reflected starlight as it arrives at the observer located at a distance d from the planet, with πF the flux measured perpendicularly to the direction of propagation of the light. Furthermore, µ dO/d 2 is the solid angle under which surface area dO on the planet is seen by the observer (µ = cos θ). The planet's radius r is incorporated in the surface integral (the planet is thus not assumed to be a unit sphere). Reflected light vector πF depends on the planetary phase angle α, i.e. the angle between the star and the observer as measured from the centre of the planet (0 • ≤ α ≤ 180 • ). The range of observable phase angles for an exoplanet will depend on the orbital inclination and/or on the inner working angle of the instrument.</p><p>Furthermore in Eq. 12, each locally reflected vector I, and hence each local reflection matrix R 1 is rotated such that the reference plane is no longer the local meridian plane, but the planetary scattering plane. The local rotation angle β depends on the local viewing angle θ and the location of surface area dO on the planet.</p><p>The geometric albedo A G of the planet with radius r at distance d is given by</p><formula xml:id="formula_13">A G (λ) = πF(0 • , λ) πF 0 (λ) d 2 r 2 ,<label>(13)</label></formula><p>where πF 0 (0 • , λ) is the reflected total flux at wavelength λ and phase angle α equal to 0 • . In PyMieDAP, the integration in Eq. 12 is replaced by a summation over locally reflected Stokes vectors. In order to do so, we divide the planetary disk on the sky in pixels, and compute the locally reflected Stokes vector at the centre of each pixel. A pixel contributes to the disk-signal when its center is within the disk-radius. The integration is then given by:</p><formula xml:id="formula_14">πF(α, λ) = F 0 (λ) d 2 N n=1 µ n µ 0n L(β n ) R 1 (µ n , µ 0n , φ n − φ 0n , λ) dO n ,<label>(14)</label></formula><p>with N the number of illuminated and visible pixels on the planetary disk, and with subscript n indicating that µ, µ 0 , φ − φ 0 , and β depend on the location of the pixel on the planet. In addition, µ 0 , φ − φ 0 , and β at a given location of the pixel on the planet depend on the planet's phase angle α (Appendix B provides relations that can be used to derive these angles). In the summation, dO n refers to the area of the pixel as measured on the surface of the planet.</p><p>Although not explicitly indicated in Eqs. 14 and 12, R 1 will usually also depend on the location (of a pixel) on the planet. Typical horizontally inhomogeneities would be: the surface coverage and altitude, and the atmospheric composition and structure. The obvious horizontal variations on Earth are of course the oceans and the continents, and in the atmosphere, the clouds. Horizontal inhomogeneities can be taken into account by using different local reflection vectors R 1 across the planet (in that case, R 1 in Eq. 14 would include a subscript n).</p><p>Given a model planet and a planetary phase angle α, the steps to evaluate Eq. 14, are the following:</p><p>1. Divide the planet in pixels small enough to be able to assume that the planet properties across each pixel are horizontally homogeneous, and to be able to follow the limb and the terminator of the planet. 2. Calculate for (the centre of) each pixel the angles µ (i.e. cos θ), φ, and the rotational angle β. These angles are independent of the location of the sun or star with respect to the planet. 3. Calculate for the given phase angle α, and for (the centre of) each pixel, µ 0 (i.e. cos θ 0 ) and φ 0 . These angles depend on the location of the sun or star with respect to the planet. 4. Calculate for (the centre of) each pixel, the column vector R 1 of the locally reflected light using the appropriate database file (see Sect. 5). 5. Perform the summation described by Eq. 14.</p><p>The pixels can be defined on the planet, for example by using a latitude and longitude grid, in which case µ dO, the projected area of the pixel (see Eq. 12), i.e. the pixel area as 'seen' by the observer (see <ref type="figure" target="#fig_9">Fig. 3</ref>) will depend on the location of the pixel on the planet. PyMieDAP uses a grid of equally sized square pixels, <ref type="figure" target="#fig_9">Fig. 3</ref>: Sketch of a surface area dO on the planet (side view) and its projection towards the observer. The observer 'sees' a pixel area equal to µ dO = cos θ dO, with θ the local viewing zenith angle. similar to detector pixels, and uses the projections of those pixels onto the planet to divide the planet into separate regions. In this case, µ dO is simply the surface area of the square pixel, and there is no need to calculate dO, the surface of the projected pixel on the planet (which can have a complicated shape). The result of the integration will depend on the pixel size, and thus on the number of pixels across the planetary disk, in particular at large phase angles, where the pixels should be sufficiently small resolve the crescent shape of the illuminated part of the planetary disk.</p><p>The computation time increases linearly with N, the number of pixels on the illuminated and visible part of the planetary disk. In order to keep computing times low, it is thus important to find a balance between the number of pixels and the accuracy. The relative error in the total flux of a Lambertian reflecting planet due to the pixel size is shown in <ref type="figure" target="#fig_5">Fig. 4</ref>. The errors decrease with increasing value of N at any given phase angle α. For a given value of N, the relative error increases with increasing phase angle α, thus with decreasing width of the planetary crescent, but the total disk-integrated flux also decreases with increasing α, with πF(180 • ) = 0.0. Thus while the relative errors at large phase angles can be very large, the absolute errors remain small. For computations across a range of phase angles, PyMieDAP can automatically increase the number of pixels across the equator N eq (and therefore N) with increasing α in order to keep the errors small. The results of this automatic increase of N are also shown in <ref type="figure" target="#fig_5">Fig. 4</ref>. This 'adaptive pixels scheme' can be useful as a trade-off between computational efficiency and the need to resolve the planet at large phase angles, as using a smaller number of pixels for a full planet is usually acceptable, while it might be detrimental to the computed output for thin crescents.</p><p>Note that for horizontally homogeneous planets, the Stokes vector of the hemisphere above the planetary scattering plane equals that of the southern hemisphere, except for the sign of Stokes parameters U and V.</p><p>For horizontally homogeneous planets, <ref type="bibr" target="#b32">Stam et al. (2006</ref>) describe an efficient algorithm that does not require dividing the planet into pixels, and that evaluates the disk-integrated Stokes vector πF at arbitrary phase angles α. With this algorithm (that has not been implemented in PyMieDAP), vectors of horizontally inhomogeneous planets can be approximated using a weighted sum of vectors of horizontally homogeneous planets (see <ref type="bibr" target="#b29">Stam 2008)</ref>, with the weights depending on the fractions the various inhomogeneities cover on the illuminated and visible part of the planetary disk. With such a weighted sum approximation, one can estimate the range of signals to be expected from an exoplanet. However, because a weighted sum does not account for the actual spatial distribution of the inhomogeneities, and e.g. the change therein when a planet rotates about its axis, it Fth <ref type="formula">(0)</ref> [%]</p><p>20 pixels 50 pixels 100 pixels 40 pixels + adapt. </p><formula xml:id="formula_15">(α) = N eq (0 • )[1+sin 2 (α/2)], with N eq (0 • ) = 40.</formula><p>cannot be used for interpreting signals of planets that are known to exhibit significant horizontal inhomogeneities. For such applications, PyMieDAP's pixel approach should be used.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.">Describing the model atmosphere and surface</head><p>PyMieDAP 's adding-doubling radiative transfer algorithm assumes a flat model atmosphere that is horizontally homogeneous, but that can be vertically inhomogeneous because different horizontally homogeneous atmospheric layers can be stacked. A model atmosphere is bounded below by a flat, horizontally homogeneous surface. Below we describe how the scattering by the gaseous molecules, the aerosol particles and the reflection by the surface is implemented in PyMieDAP.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.1.">The model atmosphere</head><p>A model atmosphere consists of a stack of horizontally homogeneous layers. Each atmospheric layer can contain gaseous molecules and/or aerosol particles (including cloud particles). For every layer, the algorithm requires the total optical thickness b, the single scattering matrix F of the gas and/or aerosol particles in the layer, and their single scattering albedo a. The single scattering of incident light by gas molecules is described by anisotropic Rayleigh scattering <ref type="bibr" target="#b13">(Hansen &amp; Travis 1974)</ref>, which includes both the inelastic Cabannes scattering and the elastic Raman scattering processes <ref type="bibr" target="#b38">(Young 1981)</ref>. Although overall energy is thus conserved, narrow spectral features that are due to Raman scattering, such as the filling-in of absorption lines in stellar spectra upon inelastic scattering in the planetary atmosphere <ref type="bibr" target="#b11">(Grainger &amp; Ring 1962;</ref><ref type="bibr" target="#b30">Stam et al. 2002)</ref> cannot be reproduced with PyMieDAP's radiative transfer code.</p><p>We use the single scattering matrix for anisotropic Rayleigh scattering as described by <ref type="bibr" target="#b13">Hansen &amp; Travis (1974)</ref>:</p><formula xml:id="formula_16">F m (Θ, λ) =              A m 1 (Θ, λ) B m 1 (Θ, λ) 0 0 B m 1 (Θ, λ) A m 2 (Θ, λ) 0 0 0 0 A m 3 (Θ, λ) 0 0 0 0 A m 4 (Θ, λ)              ,<label>(15)</label></formula><p>with the superscript 'm' referring to molecules. The single scattering angle Θ is measured with respect to the direction of propagation of the incoming beam of light: Θ = 0 • for forward and 180 • for backward scattered light.</p><p>Single scattering matrix F m is normalized at every wavelength λ such that element A m 1 (the 'phase function'), averaged over all scattering directions equals one (see <ref type="bibr" target="#b13">Hansen &amp; Travis 1974)</ref>. The elements of F m are the following <ref type="bibr" target="#b13">[Hansen and Travis, 1974]</ref> </p><formula xml:id="formula_17">A m 1 (Θ, λ) = 1 − 1 4 ∆(λ)(1 − 3 cos 2 Θ)<label>(16)</label></formula><formula xml:id="formula_18">A m 2 (Θ, λ) = 3 4 ∆(λ)(1 + cos 2 Θ)<label>(17)</label></formula><formula xml:id="formula_19">A m 3 (Θ, λ) = 3 2 ∆(λ) cos Θ<label>(18)</label></formula><formula xml:id="formula_20">A m 4 (Θ, λ) = 3 2 ∆(λ)∆ (λ) cos Θ<label>(19)</label></formula><formula xml:id="formula_21">B m 1 (Θ, λ) = − 3 4 ∆(λ) sin 2 Θ,<label>(20)</label></formula><p>with</p><formula xml:id="formula_22">∆(λ) = 1 − ρ(λ) 1 + ρ(λ)/2 and ∆ (λ) = 1 − 2ρ(λ) 1 + ρ(λ)/2 .<label>(21)</label></formula><p>While the depolarization factor ρ depends on λ (see, e.g. <ref type="bibr" target="#b28">Sneep &amp; Ubachs 2005;</ref><ref type="bibr" target="#b1">Bates 1984)</ref>, for most gases, the precise spectral dependence is not well-known. Typical values for the ρ are 0.09 for CO 2 (fairly wavelength independent) and 0.0213 for N 2 (at 500 nm). The current version of PyMieDAP assumes a wavelength independent value for ρ. Our adding-doubling radiative transfer algorithm (see Sect. 5), does not actually use the scattering matrix elements themselves, but rather the coefficients of their expansion in generalized spherical functions, as described in detail by <ref type="bibr" target="#b8">de Rooij &amp; van der Stap (1984)</ref>. The expansion coefficients for anisotropic Rayleigh scattering are given in e.g. <ref type="bibr" target="#b30">Stam et al. (2002)</ref> and are, for a given value of ρ, computed by PyMieDAP.</p><p>With PyMieDAP, the user can directly define b m , the gaseous extinction optical thickness of an atmospheric layer (measured along the vertical direction), or the user can specify the pressure difference across an atmospheric layer and leave PyMieDAP to compute b m for each given wavelength λ under the assumption of hydrostatic equilibrium, according to</p><formula xml:id="formula_23">b m (λ) = σ m (λ) N m = σ m (λ) N A p bot − p top mg ,<label>(22)</label></formula><p>with σ m the molecular extinction cross-section (in µm 2 molecule −1 ), N m the column number density of the gas (in molecules µm −2 ), p bot − p top the pressure difference (in bars or 10 −5 N m −2 ), N A the constant of Avogadro (i.e. 6.022140857 · 10 23 ), m the mass per mole (in atomic mass units or g mole −1 ), and g the acceleration of gravity (in m s −2 ). Apart from the pressure levels, the user specifies both m and g. Note that we have left out factors to account for unit conversions in Eq. 22 and in equations below.</p><p>The molecular extinction cross-section is the sum of the molecular scattering and absorption cross-sections, as follows</p><formula xml:id="formula_24">σ m (λ) = σ m sca (λ) + σ m abs (λ).<label>(23)</label></formula><p>Combining this with Eq. 22, it is clear that</p><formula xml:id="formula_25">b m (λ) = σ m sca (λ) N m + σ m abs (λ) N m = b m sca (λ) + b m abs (λ),<label>(24)</label></formula><p>with b m sca and b m abs the layer's molecular scattering and absorption optical thicknesses, respectively. To include gaseous absorption, the user defines the gaseous absorption optical thickness b m abs per wavelength.</p><p>PyMieDAP computes the molecular scattering cross-section σ m sca according to</p><formula xml:id="formula_26">σ m sca (λ) = 24π 3 N 2 L (n 2 (λ) − 1) 2 (n 2 (λ) + 2) 2 (6 + 3ρ(λ)) (6 − 7ρ(λ)) 1 λ 4 ,<label>(25)</label></formula><p>with N L Loschmidt's number, n the refractive index of the gas under standard conditions, and ρ the depolarization factor. The refractive index is usually wavelength dependent, and PyMieDAP can compute the refractive indices of N 2 , air, CO 2 , H 2 and He, using dispersion formulae that are valid across visible and near-IR wavelengths <ref type="bibr" target="#b23">(Peck &amp; Khanna 1966;</ref><ref type="bibr" target="#b5">Ciddor 1996;</ref><ref type="bibr" target="#b2">Bideau-Mehu et al. 1973;</ref><ref type="bibr" target="#b22">Peck &amp; Huang 1977;</ref><ref type="bibr" target="#b18">Mansfield &amp; Peck 1969)</ref>. Users can also provide their own values for n. Aerosol particles are small particles that are suspended in the atmospheric gas. PyMieDAP considers cloud particles (relatively large particles with relatively high volume number densities) as any other type of aerosol particle. The influence of aerosol particles on the transfer of radiation through an atmospheric layer depends on the layer's aerosol extinction optical thickness b a , their single scattering albedo a a and their single scattering matrix F a .</p><p>The PyMieDAP user can specify b a at all required wavelengths, or provide a value for N a , the layer's aerosol column number density (in µm −2 ). In the latter case, PyMieDAP computes b a from N a and the aerosol extinction cross section σ a , as follows</p><formula xml:id="formula_27">b a (λ) = σ a (λ) N a .<label>(26)</label></formula><p>Given the microphysical properties of the aerosol particles, PyMieDAP uses a Mie-algorithm ( <ref type="bibr" target="#b8">de Rooij &amp; van der Stap 1984)</ref> to compute σ a , and through that b a , for every λ, assuming that the particles are homogeneous and spherical. The microphysical properties to be specified by the user are the particle size-distribution (see <ref type="bibr" target="#b8">de Rooij &amp; van der Stap 1984)</ref> and the refractive index. For layered spherical particles, PyMieDAP uses an adaptation of the algorithm presented by <ref type="bibr" target="#b4">Bohren &amp; Huffman (1983)</ref>. For these types of particles, the user specifies the refractive indices of the core and the shell, and the core radius as a fraction of the particle radius. Using the Mie-algorithm or the adapted algorithm for layered spheres, PyMieDAP also computes the aerosol single scattering matrix F a , which has the following form</p><formula xml:id="formula_28">F a (Θ, λ) =              A a 1 (Θ, λ) B a 1 (Θ, λ) 0 0 B a 1 (Θ, λ) A a 2 (Θ, λ) 0 0 0 0 A a 3 (Θ, λ) B a 2 (Θ, λ) 0 0 −B a 2 (Θ, λ) A a 4 (Θ, λ)              ,<label>(27)</label></formula><p>and that they are normalized like scattering matrix F m (Eq. 15). This matrix form holds for spherical particles, for particles with a plane of symmetry in random orientation, and for particles that are asymmetric and randomly oriented, while half of the particles are mirror images of the other half (see <ref type="bibr" target="#b13">Hansen &amp; Travis 1974)</ref>. Rather than the scattering matrix elements themselves, PyMieDAP uses the coefficients of their expansion into generalized spherical functions ( <ref type="bibr" target="#b8">de Rooij &amp; van der Stap 1984)</ref>. Obviously, in nature not all aerosol particles are spherical, and while PyMieDAP cannot compute the expansion coefficients that describe the scattering of light by non-spherical particles, it can use them when the user provides them. Examples of sources of expansion coefficients of non-spherical particles are those derived from measured matrix elements, such as those in the Amsterdam-Granada Light Scattering Database ( <ref type="bibr" target="#b21">Muñoz et al. 2012</ref>) For differently shaped particles, such as spheroids or ice crystals, various algorithms have been developed to calculate scattering matrix elements, such as the T-matrix method (see <ref type="bibr" target="#b20">Mishchenko et al. 2002)</ref> and the ADDA-method <ref type="bibr" target="#b39">(Yurkin &amp; Hoekstra 2011</ref>). Expansion coefficients derived from those matrix elements could be imported into PyMieDAP.</p><p>Finally, PyMieDAP computes the atmospheric layer's total optical thickness b at wavelength λ as</p><formula xml:id="formula_29">b(λ) = b m sca (λ) + b m abs (λ) + b a sca (λ) + b a abs (λ) = b m (λ) + b a (λ),<label>(28)</label></formula><p>the layer's single scattering albedo a as</p><formula xml:id="formula_30">a(λ) = b m sca (λ) + b a sca (λ) b(λ) ,<label>(29)</label></formula><p>and its single scattering matrix F as</p><formula xml:id="formula_31">F(Θ, λ) = b m sca (λ) F m (Θ, λ) + b a sca (λ) F a (Θ, λ) b m sca (λ) + b a sca (λ) .<label>(30)</label></formula><p>Note that if more than one aerosol type (size distribution, shape, refractive index) is used in an atmospheric layer, PyMieDAP computes the extinction optical thickness, single scattering albedo and single scattering matrix of the mixture of aerosol particles using equations similar to Eqs. 28-30 before combining the aerosol optical properties with those of the gaseous molecules.</p><p>The values for b, a, and F for every atmospheric layer are fed into the adding-doubling radiative transfer algorithm, together with the reflection properties of the surface.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4.2.">The model surface</head><p>Unless it is pitch-black, a planetary surface will reflect incident direct light, i.e. the unscattered light from the sun or star, and, if there is an atmosphere above the surface, the incident diffuse light, i.e. the light from the sun or star that has been scattered and that emerges from the bottom of the atmosphere. The surface albedo a s indicates the fraction of all incident light that is reflected back up. This albedo ranges from 0.0 (all incident light is absorbed) to 1.0 (all incident light is reflected).</p><p>In PyMieDAP, the surface reflection is defined through a reflection matrix. In the current version of PyMieDAP, the surface reflection is Lambertian: it reflects light isotropically and completely depolarized. The (1,1)-element of the reflection matrix of a Lambertian surface equals a s and is thus independent of the illumination and viewing geometries, while all other matrix elements equal zero.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.">The radiative transfer algorithm</head><p>As described in Eq. 9, to calculate Stokes vector I(µ, µ 0 , φ − φ 0 ) of light that is locally reflected by a model planet, we have to compute R 1 , the first column of the local planetary reflection matrix. The computation of vector R 1 includes all orders of scattering in the planetary atmosphere and reflection by the surface (if a s &gt; 0.0). PyMieDAP computes R 1 , although not directly. Instead, PyMieDAP produces ASCII-files (see Appendix A) that contain the coefficients of the Fourier expansion of R 1 for various combinations of µ and µ 0 . These files, that are stored in a database for repeated use, are accessed to compute R 1 for the required combination of (µ, µ 0 , φ − φ 0 ). The expansion is described in Sect. 5.1, and the subsequent application for the required geometry in Sect. 5.2.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.1.">The Fourier expansion of the reflection matrix</head><p>Equation 28 in de <ref type="bibr" target="#b7">Haan et al. (1987)</ref> shows how a matrix such as the planetary reflection matrix R can be expanded in a Fourier series. Because we only need the first column of this matrix, we can rewrite this expansion as follows</p><formula xml:id="formula_32">R 1 (µ, µ 0 , φ − φ 0 , λ) = B +0 (φ − φ 0 ) R 0 1 (µ, µ 0 , λ) + 2 M m=1 B +m (φ − φ 0 ) R m 1 (µ, µ 0 , λ),<label>(31)</label></formula><p>where R m 1 is the first column of the mth Fourier coefficient matrix</p><formula xml:id="formula_33">R m (0 ≤ m ≤ M).</formula><p>The series is summed up till and including coefficient number M, the value of which is determined by the accuracy of the adding-doubling radiative transfer calculations (see <ref type="bibr" target="#b7">de Haan et al. 1987)</ref>. Matrices B +m and B −m have zero's everywhere except on the diagonal:</p><formula xml:id="formula_34">B +m (φ) = diag(cos mφ, cos mφ, sin mφ, sin mφ),<label>(32)</label></formula><formula xml:id="formula_35">B −m (φ) = diag(− sin mφ, − sin mφ, cos mφ, cos mφ).<label>(33)</label></formula><p>An obvious advantage of using the Fourier coefficients vectors R m 1 instead of R 1 itself, is that they are independent of the azimuthal angle difference φ − φ 0 . Combining Eqs. 9 and 31-33, the elements of vector I describing the light that is locally reflected by a planet are obtained through</p><formula xml:id="formula_36">I(µ, µ 0 , φ − φ 0 , λ)/µ 0 F 0 (λ) = R 0 11 (µ, µ 0 , λ) + 2 M m=1 cos m(φ − φ 0 ) R m 11 (µ, µ 0 , λ),<label>(34)</label></formula><formula xml:id="formula_37">Q(µ, µ 0 , φ − φ 0 , λ)/µ 0 F 0 (λ) = R 0 21 (µ, µ 0 , λ) + 2 M m=1 cos m(φ − φ 0 ) R m 21 (µ, µ 0 , λ),<label>(35)</label></formula><formula xml:id="formula_38">U(µ, µ 0 , φ−φ 0 , λ)/µ 0 F 0 (λ) = 2 M m=1 sin m(φ−φ 0 ) R m 31 (µ, µ 0 , λ),<label>(36)</label></formula><formula xml:id="formula_39">V(µ, µ 0 , φ−φ 0 , λ)/µ 0 F 0 (λ) = 2 M m=1 sin m(φ−φ 0 ) R m 41 (µ, µ 0 , λ),<label>(37)</label></formula><p>with the subscripts 11, 21, 31, and 41 denoting the 1st, 2nd, 3rd, and 4th element of the column vectors R 0 1 and R m 1 , respectively. For a given model planet, the Fourier file contains R m 11 , R m 21 , R m 31 , and R m 41 for m = 0 to M for various combinations of µ and µ 0 (see Sect. 5.2).</p><p>We calculate R m 11 , R m 21 , R m 31 , and R m 41 using the accurate and efficient adding-doubling radiative transfer algorithm as described in de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>. This algorithm includes all orders of scattering, and it fully includes linear and circular polarization for all orders.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="5.2.">Gaussian abscissae</head><p>The values of µ and µ 0 at which the Fourier coefficients are provided, equal the Gaussian abscissae that are used in the adding-doubling algorithm <ref type="bibr" target="#b7">(de Haan et al. 1987</ref>) for the GaussLegendre integrations over all scattering directions. For example, if 12 abscissae are used for the integrations, we provide the coefficients R m z1 (with z equal to 1, 2, 3, or 4) at these 12 values of µ 0 and at the same 12 values of µ, thus at a total of 144 combinations of illumination (µ 0 ) and viewing (µ) geometries.</p><p>The number of Gaussian abscissae that is required to reach a given accuracy with the radiative transfer computations depends strongly on the single scattering properties of atmospheric aerosol particles. In particular, if the scattered total and polarized fluxes vary strongly with the single scattering angle (typically when the particles are large with respect to the wavelength λ, see e.g. <ref type="bibr" target="#b13">Hansen &amp; Travis (1974)</ref> for sample figures), more abscissae are needed than when they vary smoothly. The required number of abscissae depends also on the illumination and viewing geometries, for example, large solar zenith angles and/or viewing angles usually require more abscissae than small angles. We choose the number of abscissae in the database files such that the coefficients will give accurate results for a large range of combinations of µ and µ 0 .</p><p>The expansion coefficients provided in a Fourier coefficients file can be used directly to evaluate Eqs. 34-37 at one of the available combinations of Gaussian abscissae µ and µ 0 , and for an arbitrary, user defined, value of φ − φ 0 . Fourier coefficients at values of µ and/or µ 0 that do not coincide with Gaussian abscissae can be obtained by interpolation.</p><p>To avoid having to extrapolate to obtain results at the often used values of µ and/or µ 0 equal to 1.0 (i.e. θ, θ 0 = 0 • ), which are not part of any set of Gaussian abscissae (that have values larger than 0.0 and smaller than 1.0), we have included µ 0 , µ 0 = 1.0 as so-called supplemented µ-values (see Sect. 5 of de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>). The adding-doubling algorithm calculates the Fourier coefficients at these supplemented values as if they were Gaussian abscissae. Thus, if we use M Gaussian abscissae, the Fourier coefficients are provided at M + 1 values of µ and µ 0 (thus at (M + 1) 2 combinations of µ and µ 0 ).</p><p>PyMieDAP separates the computation and storage of the Fourier coefficients from the computations of the locally reflected light <ref type="bibr">(Eqs. 34-37)</ref>, and it can indeed skip the Fourier coefficients computation, and instead use a previously computed Fourier file to compute the locally reflected light. The advantage of this is that time is saved, because depending on the composition and structure of the model atmosphere, the Fourier computations can take a significant amount of computing time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="6.">Horizontally inhomogeneous planets</head><p>Because PyMieDAP is pixel-based, it can be applied to horizontally inhomogeneous planets, i.e. planets with horizontal variations in their atmosphere and/or surface properties. The user can define such horizontal inhomogeneities by using a so-called mask, in which pixels are assigned a value corresponding to a specific atmosphere-surface model combination, e.g. '0' for model combination 1, '1' for the model combination 2, ... When PyMieDAP computes the locally reflected light for a given pixel, it will do so using the Fourier coefficients file for the model associated with that pixel. A pixel mask can be phase angle dependent, i.e. a different pattern can be defined for each phase angle, e.g. to simulate a rotating planet.</p><p>Common horizontal inhomogeneities on planets are clouds. PyMieDAP has the following 4 different types of cloud coverage masks built in (see <ref type="figure">Fig. 5</ref>): sub-solar clouds, polar cusps, latitudinal bands, and patchy clouds.</p><p>Sub-solar clouds are thought to be relevant for tidally-locked planets, such as exoplanets in tight orbits around their parent star ( <ref type="bibr" target="#b37">Yang et al. 2013</ref>). For these clouds, the pixel grid on the planetary disk is filled such that the region where the local solar zenith angle θ 0 is smaller than the user-defined angle σ c is assigned one atmosphere-surface model combination, and the other pixels another. This mask can also be used to model a sub-solar ocean (also referred to as "eyeball planet"; Turbet et al. 2016; Pierrehumbert 2011).</p><p>Polar-cusps are clouds that form where the daily averaged incident solar or stellar flux dips below a certain threshold. For these clouds, the pixels located poleward of the user-defined latitude L t on the planet are assigned one model combination, and the other pixels another (the planet's equator is assumed to be in the middle of the planetary disk). This mask would also be useful to model polar hazes.</p><p>Latitudinal bands are bands of clouds covering ranges of latitudes. For these clouds, the user provides an array of latitudes that border the different atmosphere-surface models (the planet's equator is assumed to be in the middle of the planetary disk). Such a mask can be useful for planets with belts and zones, or to simulate planets with latitudinal variations.</p><p>Patchy clouds are distributed across the planetary disk. They are described by F c , the fraction of all pixels on the disk that are cloudy, and the spatial distribution of these cloudy pixels. This mask can accept N atmosphere-surface models, each with its own cloud coverage fraction F c,i , with i = 0, . . . , N − 1. Patchy cloud patterns are generated by drawing 50 values from a 2D-Gaussian distribution centred on a randomly chosen location within the pixel grid. The covariance matrix is given by</p><formula xml:id="formula_40">Σ = n pix x scale 0 0 y scale (38)</formula><p>where x scale and y scale are used to fine-tune the shapes of the cloud patches along the north-south and east-west axes.</p><p>PyMieDAP uses x scale = 0.1 and y scale = 0.01 as nominal values in order to generate clouds with a zonal-oriented pattern similar to that observed on Earth. Cloud patches are generated on the planetary disk until the specified value of F c,i is reached, the overall cover of all types of patches being 1. The cloud fraction F c is defined at α = 0 • , because climatologically, the planetarywide cloud coverage is more relevant than the coverage seen by an observer. The cloud fraction observed at α &gt; 0 • can thus differ from the specified value of F c . An illustration of this cloud distribution is given in <ref type="figure">figure 6</ref>, which shows the disk-resolved simulations of flux, linear and circular polarisation for 50% cloud cover, as computed by PyMieDAP. The disk-integrated signal of a planet covered by patchy clouds will depend on the position of the cloudy pixels on the disk. To capture this variability, the user can choose to draw several patterns randomly at each phase angle. PyMieDAP will return the average and standard deviations of the values of I, Q, U, and V over all patterns. It can also store the values for each pattern, providing the user insight into the variability.</p><p>An example of the variability computed using PyMieDAP can be found in  where it was used to generate the disk-integrated signals of Earth-like exoplanets with varying types and amount of coverage by liquid water clouds. Thanks to the use of Fourier coefficients, only a limited number of model computations were necessary: clear sky and cloudy case with different cloud-top altitudes. Furthermore, because the Fourier files allow for computation of the reflected Stokes vector of light for any geometry, it was possible to generate the Stokes vector of each pixel for the clear and cloudy cases, and then apply masks on these grids of pixels to obtain the desired cloud pattern. The variability due to patchy cloud cover could be simulated by simply using 300 patterns that were averaged.</p><p>Another example of use of patchy cloud masks in PyMieDAP can be found in <ref type="bibr" target="#b10">Fauchez et al. (2017)</ref> where diskintegrated signals of exoplanets with patchy clouds were computed to investigate the effect of such clouds on the spectral signature of the O 2 A-absorption band in the flux and polarization of reflected starlight.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.">Benchmark results</head><p>Here, we will compare results of PyMieDAP against (published) results obtained with other codes. This comparison allows an assessment of the accuracy of PyMieDAP's approach using computed Fourier coefficients files, and our results allow PyMieDAP users to check their PyMieDAP installation and understanding of the input and output files.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.1.">Locally reflected light</head><p>We compare our results for locally reflected light with those presented in <ref type="table">Tables 5, 6</ref>, 9 and 10 of de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>. We use the same adding-doubling algorithm as de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>, with the same accuracy, i.e. 10 −6 . However, while de <ref type="bibr" target="#b7">Haan et al. (1987)</ref> compute the reflected Stokes vectors at precisely the specified values of θ 0 and θ, we use a Fourier coefficients file (with θ = θ 0 = 0 • as supplemented Gaussian abscissae), combined with spline interpolation Press et al. (with the algorithm from 1992) to obtain the reflected Stokes vectors at the same geometries.</p><p>Two model atmosphere-surface combinations are considered in de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>: model 1, with a single layer atmosphere containing only haze droplets, bounded below by a black surface, and model 2, with an upper atmospheric layer containing only gas and a second, lower layer containing a mixture of gas and haze droplets, bounded below by a Lambertian reflecting surface with albedo A s of 0.1. The molecular depolarization factor ρ is 0.0279. The haze particles in both atmospheres are water-haze L particles (Deirmendjian 1969), with their optical properties calculated at λ = 0.7 µm (for the single scattering expansion coefficients, see <ref type="bibr" target="#b8">de Rooij &amp; van der Stap 1984)</ref>.  <ref type="table">Table 1</ref> shows the Stokes vector elements of the locally reflected light for model 1 from de <ref type="bibr" target="#b7">Haan et al. (1987)</ref> and calculated using PyMieDAP and 40 Gaussian abscissae (N G = 40). <ref type="table" target="#tab_1">Table 2</ref> shows the results for model 2. As can be seen, PyMieDAP's pre-calculated Fourier coefficients combined with spline interpolation yields accurate results for both models. Note that when µ = 1.0, i.e. the supplemented Gaussian abscissa in our Fourier files (cf. Sect. 5.2), we only have to interpolation between Fourier coefficients for µ 0 , not for µ.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="7.2.">Disk-integrated reflected starlight</head><p>There are no disk-integrated Stokes parameters in de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>. We therefore first compare the disk-integrated reflected total flux as computed using PyMieDAP against the analytical expression for the phase function of a Lambertian reflecting, spherical planet with a surface albedo a s , i.e. (see van <ref type="bibr" target="#b36">de Hulst 1980)</ref> ψ(α) = 2 3π a s (sin α + π cos α − α cos α) .</p><p>(39) <ref type="figure">Figure 7</ref> shows ψ calculated using PyMieDAP and a s = 1.0. For N G ≥ 20, these results are indistinguishable from those computed by Eq. 39. This comparison also shows the validity of calculating reflected disk-integrated fluxes under the assumption of a locally plane-parallel atmosphere and/or surface.</p><p>To test the accuracy of the computed disk-integrated polarization, we compare PyMieDAP results against results for two Jupiter-like gas planets computed with the same Fourier expansion coefficients but an integration method that treats the whole planet as a single scattering particle ( <ref type="bibr" target="#b32">Stam et al. 2006</ref>) (the latter method is only applicable to horizontally homogeneous planets).</p><p>The first planet (Sect. 4.1 of <ref type="bibr" target="#b32">Stam et al. 2006</ref>) has a purely gaseous atmosphere with b m sca = 5.75 and b m abs = 0.0, and ρ = 0.02 (i.e. representative for H 2 ). The surface albedo a s = 0.0. <ref type="figure">Figure 7</ref> shows the disk-integrated reflected total flux and degree of linear polarization as functions of α at λ = 0.55 µm. According to <ref type="bibr" target="#b32">Stam et al. (2006)</ref>, the geometric albedo A G of this planet is 0.647 and the maximum degree of polarization 0.37 (this value is reached at α = 93 • (note that <ref type="bibr" target="#b32">Stam et al. (2006)</ref> use the scattering angle Θ rather than α (Θ = 180.0 − α). <ref type="table">Table 3</ref> shows both the results of <ref type="bibr" target="#b32">Stam et al. (2006)</ref> (interpolated linearly to obtain the values at the listed phase angles) and the results from PyMieDAP . Comparing the results, it is clear that PyMieDAP is very accurate, even for a relatively small number of Gaussian abscissae (i.e. N G = 20).</p><p>The second planet (Sect. 4.2 of <ref type="bibr" target="#b32">Stam et al. 2006</ref>) has the same gaseous atmosphere and black surface as the first, but with aerosol particles added. The aerosol optical thickness b a = 3.25, yielding a total atmospheric optical thickness b of 9.0 (at λ = 0.55 µm). The aerosol particles are well-mixed with the gas molecules, and have the microphysical properties of the model D particles of <ref type="bibr" target="#b8">de Rooij &amp; van der Stap (1984)</ref>. The disk-integrated reflected flux and degree of linear polarization as functions of α computed with PyMieDAP are shown in <ref type="figure">Fig. 7</ref>. The geometric albedo A G of this second planet is 0.669 according to <ref type="bibr" target="#b32">Stam et al. (2006)</ref>. <ref type="table" target="#tab_2">Table 4</ref> is similar to <ref type="table">Table 3</ref>, except for the second planet. Because the single scattering scattering matrix elements of model D aerosol particles show significant angular structures, in particular in the forward and backward scattering directions, more Gaussian abscissae are needed (by both disk-integration methods) to achieve accurate results across the whole phase angle range; we used N G = 50.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="8.">Summary</head><p>We presented PyMieDAP, a modular Python-based tool to compute the total and polarized fluxes of light that is reflected by (exo)planets (or moons) with locally horizontally homogeneous, plane-parallel atmospheres bounded below by a horizontally homogeneous, flat surface. The atmospheres can be vertically inhomogeneous. Horizontally inhomogeneous planets are modelled by assigning different atmosphere-surface combinations to different regions on the planet. The Fortran radiative transfer algorithm is based on the adding-doubling method as described by <ref type="bibr" target="#b7">de Haan et al. (1987)</ref>, and fully includes linear and circular polarization for all orders of scattering. The single scattering of light by atmospheric aerosols is computed using Mie-scattering, based on <ref type="bibr" target="#b8">de Rooij &amp; van der Stap (1984)</ref>.</p><p>PyMieDAP has a two-step approach: first, the addingdoubling radiative transfer computations provide files with Fourier coefficients of the expansion of the local reflection matrix of the model planetary atmosphere and surface, and, second, the Fourier coefficients are used to efficiently compute the locally reflected Stokes vectors for every given geometry. The latter Stokes parameters can be summed up to provide the diskintegrated Stokes parameters of the reflected starlight. By storing the Fourier-coefficient files for later use, significant amounts of computing time can be saved in the computation of the reflected light vectors.</p><p>The modular aspect of PyMieDAP allows users to define an atmosphere-surface model and to compute spatially resolved and/or disk-integrated signals of a planet at a range of phase angle in a single function call. PyMieDAP can straightforwardly be used to model signals of horizontally inhomogeneous planets by assigning different atmosphere-surface models to different regions on a planet. Four pre-defined cloud types or 'masks' are included in the code. The modular aspect of the code also allows for step-by-step computations, for users who wish to perform more complicated cases.</p><p>PyMieDAP is distributed under the GNU GPL license and we invite interested users to suggest improvements or extensions to broaden the application of the code.</p><p>Assume that the coordinates of pixel i in the plane of the sky are given by (x i , y i ). Assuming that the planet is spherical with a radius equal to one, we know that the 3D coordinates of the projected pixel centre on the planet are (x i , y i , z i ) with z i = (x 2 i + y 2 i ) 1/2 . The local zenith direction for pixel i is given by vector <ref type="bibr">B.1)</ref> and the vector pointing to the star is given by</p><formula xml:id="formula_41">r cp =         x i y i z i         , (</formula><formula xml:id="formula_42">r cs =         sin α 0 cos α         , (B.2)</formula><p>where α is the planetary phase angle, i.e. the angle between the direction to the observer and the direction to the star as measured from the centre of the planet. The local solar/stellar zenith angle is thus given by</p><formula xml:id="formula_43">θ 0i = r cp · r cs = arccos(x i sin α + z i cos α), (B.3)</formula><p>and, since unit vector u z is pointing towards the observer, the local viewing zenith angle is given by</p><formula xml:id="formula_44">θ i = arccos z i . (B.4)</formula><p>The local azimuthal difference angle φ i − φ 0i can be computed using the spherical law of cosines: <ref type="bibr">B.5)</ref> and thus</p><formula xml:id="formula_45">cos α = cos θ 0i cos θ i + sin θ 0i sin θ i cos(φ i − φ 0i ), (</formula><formula xml:id="formula_46">φ i − φ 0i = arccos cos α − cos θ 0i cos θ i sin θ 0i sin θ i . (B.6)</formula><p>For 0 &lt; α &lt; π, the local rotation angle β i that is used to rotate computed Stokes parameters defined with respect to the local meridian planet to the planetary scattering plane is given by</p><formula xml:id="formula_47">β i = arctan (y i /x i ) if x i y i ≥ 0 180 • + arctan (y i /x i ) if x i y i &lt; 0 (B.7)</formula><p>For π &lt; α &lt; 2π, rotation angle β i is given by  <ref type="table">Table 1</ref>: Stokes parameters I, Q, U, and V of the locally reflected light for model 1 (see Sect. 7.1) (a 1-layer atmosphere with water-haze L-aerosol and a black surface), as listed in <ref type="table">Table 5</ref> of de <ref type="bibr" target="#b7">Haan et al. (1987)</ref>, and as calculated using PyMieDAP with 40 Gaussian abscissae.  <ref type="table">Table 1</ref>, except for model 2 (see Sect. 7.1) (a 2-layer atmosphere with gas and water-haze L-aerosol, and a surface with albedo 0.1), as listed in <ref type="table">Table 9</ref> of <ref type="bibr" target="#b7">de Haan et al. (1987)</ref> and as calculated using PyMieDAP with 40 Gaussian abscissae.   <ref type="table">Table 3</ref>, except for a model atmosphere with model D aerosol ( <ref type="bibr" target="#b8">de Rooij &amp; van der Stap 1984)</ref> added, such that b = 9.0. For these computations, N G = 50.</p><formula xml:id="formula_48">β i = 180 • − arctan (y i /x i ) if x i y i ≥ 0 − arctan (y i /x i ) if x i y i &lt; 0 (B.8)</formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head>Fig. 1 :</head><label>1</label><figDesc>Fig. 1: The modules comprising PyMieDAP. The blue boxes represent Fortran codes, the red boxes Python codes.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Fig. 2 :</head><label>2</label><figDesc>Fig. 2: Illustration of the rotation of the planetary scattering plane for an orbit with a random orientation (left) and with edgeon configuration (right). The first case would require further rotations to express the Stokes elements in the reference plane of the observer.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head></head><label></label><figDesc>0 the vector describing the incident light and R the 4 × 4 local planetary reflection matrix. The reference plane for I is the local meridian plane, the plane containing the local zenith direction and the propagation direction of the reflected light (see Sect. 2). Furthermore in Eq. 8, µ = cos θ, with θ the angle between the direction of propagation of the reflected light and the up- ward vertical (0 • ≤ θ &lt; 90 • ), and µ 0 = cos θ 0 , with θ 0 the an- gle between the upward vertical and the direction to the sun or star (0 • ≤ θ 0 &lt; 90 • ). The azimuthal difference angle φ − φ 0 is measured between the two vertical planes containing the direc- tions of propagation of the reflected and the incident light, re- spectively (0 • ≤ φ − φ 0 ≤ 180 • ). To get our definition for φ − φ 0 clear, consider light that is reflected in the vertical plane that con- tains the local zenith direction, and the direction towards the sun or star. If the reflected light propagates in the half of the vertical plane that contains the sun or star, φ − φ 0 = 180 • . If the reflected light propagates in the other half of the plane, φ − φ 0 = 0 • .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Fig. 4 :</head><label>4</label><figDesc>Fig. 4: The difference between the disk-integrated flux F computed using Eq. 14 and computed using the analytical expression for a sphere with a Lambertian reflecting surface and a geometric albedo A G of 1.0 (see Stam et al. 2006, and Eq. 39), as a function of the planet's phase angle α for various values of N eq , the number of pixels along the planet's equator. The difference has been normalized to A G . The dotted line: N eq increases with α according to N eq (α) = N eq (0 • )[1+sin 2 (α/2)], with N eq (0 • ) = 40.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head></head><label></label><figDesc>Fig. 5: Examples of four types of cloud cover: (a) Sub-solar clouds with an angular width σ c of 30 • at α = 45 • ; (b) Polar cusps for a threshold latitude L t of 50 • at α = 0 • ; (c) Latitudinal bands with borders at −90 • , −40 • , 0 • , 25 • , and 35 • , 90 • ; (d) Patchy clouds for a cloud fraction F c = 0.42 at α = 0 • . In all figures, N eq = 80.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>For model 1 ,</head><label>1</label><figDesc>b a = b a sca = 1.0. For model 2, b m = b m sca = 0.1 in each layer, and in the lower layer, b a = b a sca = 0.4. The incident flux πF 0 equals π (F 0 is thus 1.0).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Fig. 6 :Fig. 7 :</head><label>67</label><figDesc>Fig. 6: Computed disk-resolved locally reflected fluxes I (top), P s (middle, in percents) and P c (bottom, in percents) at α = 35 • and λ = 0.55 µm, for a patchy cloud cover with F c = 0.50. The cloud-free pixels have a pure gaseous (CO 2 ) model atmosphere with b = 7.0. The cloudy pixels contain aerosol as described by Stam et al. (2006) (we let the model D type aerosol pose as cloud particles). The disk-integrated values are F = 0.32, P s = 0.10, and P c = 1.6 · 10 −5 . For all figures, N eq = 60.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_9"><head>Table 3 :</head><label>3</label><figDesc>The flux and degree of polarization of light that is re- flected by a planet with a gaseous atmosphere with b = 5.75, bounded below by a black surface, as a function of α, as com- puted by Stam et al. (2006) and by using PyMieDAP . The num- ber of Gaussian abscissae, N G , is 20 and N eq = 100. The fluxes have been normalized such that F(0 • ) = A G .</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 : Similar to</head><label>2</label><figDesc></figDesc><table></table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 4 : Similar to</head><label>4</label><figDesc></figDesc><table></table></figure>

			<note place="foot">Rossi et al.: PyMieDAP : a tool to compute fluxes and polarization signals of (exo)planets</note>

			<note place="foot" n="1"> PyMieDAP is available at http://gitlab.com/loic.cg. rossi/pymiedap.</note>
		</body>
		<back>

			<div type="acknowledgement">
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix A: Fourier file formats</head><p>A Fourier-coefficients file for a given model atmosphere-surface combination has the following format:</p><p>The first lines contain comments, including a reference, and they have details on the model atmosphere and surface. The number of these lines depends on the number of layers in the model atmosphere, but they are all preceded by a '#'. In the following, we will assume the number of comment lines is N.</p><p>Line N + 1 contains a number to describe the size of the reflected light vectors: '1' indicates only I, '3' indicates I, Q, and U, and '4' indicates I, Q, U, and V.</p><p>Line N + 2 contains the number of Gaussian abscissae G plus the supplemented value 1.0. It thus contains the value G + 1.</p><p>Lines N + 3 up to and including N + 4 + N G contain the N G Gaussian abscissae (the cosines of the corresponding illumination and viewing zenith angles) plus the supplemented value 1.0, and the corresponding Gaussian weights. For the supplemented value, this weight is set equal to 1.0. Each line has the format: m, i, j, R m k1 , with k equal to 1, 3, or 4, with i the number of the Gaussian abscissae representing µ (1 ≤ i ≤ N G + 1), and with j the number of the Gaussian abscissae representing µ 0 (1 ≤ j ≤ N G + 1). Each file thus has (M + 1)(N G + 1) 2 lines with 1 to 4 elements of the first column of the local reflection matrix R. For a purely gaseous atmosphere, M = 2, and given N G = 20, the total number of lines with matrix elements is thus 1,323. Model atmospheres with aerosol and/or cloud particles will usually require much larger values for M, and will thus yield much larger data files.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head>Appendix B: Computation of the local angles</head><p>We describe here equations that are used to compute the local illumination and viewing angles θ 0i , θ i , β i and φ i − φ 0i for a pixel i in the pixel grid. First, we define the planetocentric reference frame (u x , u y , u z ), where u x and u y lie in the plane of the observer's sky, while u z points towards the observer.</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Aben</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Helderman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Stammes</surname></persName>
		</author>
		<title level="m">Polarization: Measurement, Analysis, and Remote Sensing. Proceedings SPIE 3121</title>
		<editor>D. Goldstein &amp; R. Chipman</editor>
		<imprint>
			<date type="published" when="1997" />
			<biblScope unit="page" from="446" to="451" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">R</forename><surname>Bates</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Planet. Space Sci</title>
		<imprint>
			<biblScope unit="volume">32</biblScope>
			<biblScope unit="page">785</biblScope>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Bideau-Mehu</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Y</forename><surname>Guern</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Abjean</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><surname>Johannin-Gilles</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Optics Communications</title>
		<imprint>
			<biblScope unit="volume">9</biblScope>
			<biblScope unit="page">432</biblScope>
			<date type="published" when="1973" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Boesche</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Stammes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><surname>Bennartz</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Quantitative Spectroscopy and Radiative Transfer</title>
		<imprint>
			<biblScope unit="volume">110</biblScope>
			<biblScope unit="page">223</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<monogr>
		<title level="m" type="main">Absorption and scattering of light by small particles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Bohren</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Huffman</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1983" />
			<publisher>Wiley</publisher>
			<biblScope unit="page" from="477" to="482" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">E</forename><surname>Ciddor</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Applied optics</title>
		<imprint>
			<biblScope unit="volume">35</biblScope>
			<biblScope unit="page">1566</biblScope>
			<date type="published" when="1996" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">V</forename><surname>Cotton</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">P</forename><surname>Marshall</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Bailey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Monthly Notices of the Royal Astronomical Society</title>
		<imprint>
			<biblScope unit="volume">467</biblScope>
			<biblScope unit="page">873</biblScope>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>De Haan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><forename type="middle">B</forename><surname>Bosma</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">183</biblScope>
			<biblScope unit="page">371</biblScope>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b8">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>De Rooij</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">C A H</forename><surname>Van Der Stap</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">131</biblScope>
			<biblScope unit="page">237</biblScope>
			<date type="published" when="1984" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b9">
	<monogr>
		<title level="m" type="main">Electromagnetic scattering on spherical polydispersions</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Deirmendjian</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b10">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Fauchez</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astrophysical Journal</title>
		<imprint>
			<biblScope unit="volume">842</biblScope>
			<biblScope unit="page">41</biblScope>
			<date type="published" when="2017" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b11">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>Grainger</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Ring</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">193</biblScope>
			<biblScope unit="page">762</biblScope>
			<date type="published" when="1962" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b12">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Atmospheric Sciences</title>
		<imprint>
			<biblScope unit="volume">31</biblScope>
			<biblScope unit="page">1137</biblScope>
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b13">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">E</forename><surname>Hansen</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Travis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Space Science Reviews</title>
		<imprint>
			<biblScope unit="volume">16</biblScope>
			<biblScope unit="page">527</biblScope>
			<date type="published" when="1974" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b14">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
		<title level="m">Journal of Quantitative Spectroscopy and Radiative Transfer</title>
		<imprint>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
	<note>in press</note>
</biblStruct>

<biblStruct xml:id="b15">
	<analytic>
		<title level="a" type="main">Transfer of Polarized Light in Planetary Atmospheres</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><surname>Van Der Mee</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">H</forename><surname>Domke</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Basic Concepts and Practical Methods</title>
		<imprint>
			<date type="published" when="2004" />
			<publisher>Springer</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b16">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">V M</forename><surname>Van Der Mee</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">128</biblScope>
			<biblScope unit="page">1</biblScope>
			<date type="published" when="1983" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b17">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">C</forename><surname>Kemp</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><forename type="middle">D</forename><surname>Henson</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">T</forename><surname>Steiner</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Powell</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Nature</title>
		<imprint>
			<biblScope unit="volume">326</biblScope>
			<biblScope unit="page">270</biblScope>
			<date type="published" when="1987" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b18">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">C</forename><forename type="middle">R</forename><surname>Mansfield</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Peck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JOSA</title>
		<imprint>
			<biblScope unit="volume">59</biblScope>
			<biblScope unit="page">199</biblScope>
			<date type="published" when="1969" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b19">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Mishchenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Lacis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Travis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Quantitative Spectroscopy and Radiative Transfer</title>
		<imprint>
			<biblScope unit="volume">51</biblScope>
			<biblScope unit="page">491</biblScope>
			<date type="published" when="1994" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b20">
	<monogr>
		<title level="m" type="main">Scattering, absorption, and emission of light by small particles</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">I</forename><surname>Mishchenko</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">D</forename><surname>Travis</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">A</forename><surname>Lacis</surname></persName>
		</author>
		<imprint>
			<date type="published" when="2002" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b21">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">O</forename><surname>Muñoz</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Moreno</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Guirado</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Quant. Spec. Radiat. Transf</title>
		<imprint>
			<biblScope unit="volume">113</biblScope>
			<biblScope unit="page">565</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b22">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Peck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><surname>Huang</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JOSA</title>
		<imprint>
			<biblScope unit="volume">67</biblScope>
			<biblScope unit="page">1550</biblScope>
			<date type="published" when="1977" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b23">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">R</forename><surname>Peck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">N</forename><surname>Khanna</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">JOSA</title>
		<imprint>
			<biblScope unit="volume">56</biblScope>
			<biblScope unit="page">1059</biblScope>
			<date type="published" when="1966" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b24">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Peterson</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">International Journal of Computational Science and Engineering</title>
		<imprint>
			<biblScope unit="volume">4</biblScope>
			<biblScope unit="page">296</biblScope>
			<date type="published" when="2009" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b25">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">R</forename><forename type="middle">T</forename><surname>Pierrehumbert</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astrophysical Journal Letters</title>
		<imprint>
			<biblScope unit="volume">726</biblScope>
			<biblScope unit="page">8</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b26">
	<monogr>
		<title level="m" type="main">Numerical recipes in FORTRAN. The art of scientific computing</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">H</forename><surname>Press</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">S</forename><forename type="middle">A</forename><surname>Teukolsky</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">T</forename><surname>Vetterling</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">P</forename><surname>Flannery</surname></persName>
		</author>
		<imprint>
			<date type="published" when="1992" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b27">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><surname>Rossi</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">; S</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><forename type="middle">A</forename><surname>Whitney</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">D</forename><surname>Sasselov</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Astronomy &amp; Astrophysics Seager</title>
		<imprint>
			<biblScope unit="volume">540</biblScope>
			<biblScope unit="page">504</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
	<note>ApJ</note>
</biblStruct>

<biblStruct xml:id="b28">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Sneep</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><surname>Ubachs</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Quant. Spec. Radiat. Transf</title>
		<imprint>
			<biblScope unit="volume">92</biblScope>
			<biblScope unit="page">293</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b29">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">482</biblScope>
			<biblScope unit="page">989</biblScope>
			<date type="published" when="2008" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b30">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Aben</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Helderman</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of Geophysical Research</title>
		<imprint>
			<biblScope unit="issue">1</biblScope>
			<date type="published" when="2002" />
			<publisher>Atmospheres</publisher>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b31">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">F</forename><surname>De Haan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">I</forename><surname>Aben</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Geophys. Res</title>
		<imprint>
			<biblScope unit="page">22379</biblScope>
			<date type="published" when="2000" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b32">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">W</forename><forename type="middle">A</forename><surname>De Rooij</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">G</forename><surname>Cornet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">452</biblScope>
			<biblScope unit="page">669</biblScope>
			<date type="published" when="2006" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b33">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">444</biblScope>
			<biblScope unit="page">275</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b34">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">M</forename><surname>Stam</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">W</forename><surname>Hovenier</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">L</forename><forename type="middle">B F M</forename><surname>Waters</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">A&amp;A</title>
		<imprint>
			<biblScope unit="volume">428</biblScope>
			<biblScope unit="page">663</biblScope>
			<date type="published" when="2004" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b35">
	<monogr>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">P</forename><surname>Stammes</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Kuik</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>De Haan</surname></persName>
		</author>
		<title level="m">Proceedings PIERS 1994, Kluwer Acad., Dordrecht</title>
		<meeting>PIERS 1994, Kluwer Acad., Dordrecht</meeting>
		<imprint>
			<date type="published" when="1994" />
			<biblScope unit="page" from="2255" to="2259" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b36">
	<analytic>
				<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Turbet</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Leconte</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">F</forename><surname>Selsis</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="m">Multiple Light Scattering, Tables, Formulas, and Applications, Vols</title>
		<meeting><address><addrLine>New York.</addrLine></address></meeting>
		<imprint>
			<publisher>Academic Press</publisher>
			<date type="published" when="1980" />
			<biblScope unit="volume">596</biblScope>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b37">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><surname>Yang</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">N</forename><forename type="middle">B</forename><surname>Cowan</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">S</forename><surname>Abbot</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astrophysical Journal Letters</title>
		<imprint>
			<biblScope unit="volume">771</biblScope>
			<biblScope unit="page">45</biblScope>
			<date type="published" when="2013" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b38">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">T</forename><surname>Young</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Appl. Opt</title>
		<imprint>
			<biblScope unit="volume">20</biblScope>
			<biblScope unit="page">533</biblScope>
			<date type="published" when="1981" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b39">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">A</forename><surname>Yurkin</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">A</forename><forename type="middle">G</forename><surname>Hoekstra</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">J. Quant. Spec. Radiat. Transf</title>
		<imprint>
			<biblScope unit="volume">112</biblScope>
			<biblScope unit="page">2234</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
