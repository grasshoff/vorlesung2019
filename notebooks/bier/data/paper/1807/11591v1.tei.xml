<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://www.tei-c.org/ns/1.0 /mnt/ResearchCloud/Projects/ExoPlanets/notebooks/grobid/grobid-0.5.2/grobid-home/schemas/xsd/Grobid.xsd"
 xmlns:xlink="http://www.w3.org/1999/xlink">
	<teiHeader xml:lang="en">
		<encodingDesc>
			<appInfo>
				<application version="0.5.2" ident="GROBID" when="2019-01-22T13:29+0000">
					<ref target="https://github.com/kermitt2/grobid">GROBID - A machine learning software for extracting information from scholarly documents</ref>
				</application>
			</appInfo>
		</encodingDesc>
		<fileDesc>
			<titleStmt>
				<title level="a" type="main">The Efficiency of Geometric Samplers for Exoplanet Transit Timing Variation Models</title>
			</titleStmt>
			<publicationStmt>
				<publisher/>
				<availability status="unknown"><licence/></availability>
				<date type="published" when="2018">2018</date>
			</publicationStmt>
			<sourceDesc>
				<biblStruct>
					<analytic>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Noah</forename><forename type="middle">W</forename><surname>Tuchow</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Astronomy &amp; Astrophysics</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Center for Exoplanets and Habitable Worlds</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Center for Astrostatistics</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="institution">METHODS</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Eric</forename><forename type="middle">B</forename><surname>Ford</surname></persName>
							<affiliation key="aff0">
								<orgName type="department">Department of Astronomy &amp; Astrophysics</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff1">
								<orgName type="department">Center for Exoplanets and Habitable Worlds</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff2">
								<orgName type="department">Center for Astrostatistics</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff3">
								<orgName type="department">Institute for CyberScience</orgName>
								<orgName type="institution">Pennsylvania State University</orgName>
								<address>
									<postCode>16802</postCode>
									<settlement>University Park</settlement>
									<region>PA</region>
									<country key="US">USA</country>
								</address>
							</affiliation>
							<affiliation key="aff5">
								<orgName type="institution">METHODS</orgName>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Theodore</forename><surname>Papamarkou</surname></persName>
							<affiliation key="aff4">
								<orgName type="department">School of Mathematics and Statistics</orgName>
								<orgName type="institution" key="instit1">University of Glasgow</orgName>
								<orgName type="institution" key="instit2">University Place</orgName>
								<address>
									<postCode>G12 8QQ</postCode>
									<settlement>Glasgow</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<author>
							<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">Alexey</forename><surname>Lindo</surname></persName>
							<affiliation key="aff4">
								<orgName type="department">School of Mathematics and Statistics</orgName>
								<orgName type="institution" key="instit1">University of Glasgow</orgName>
								<orgName type="institution" key="instit2">University Place</orgName>
								<address>
									<postCode>G12 8QQ</postCode>
									<settlement>Glasgow</settlement>
									<country key="GB">UK</country>
								</address>
							</affiliation>
						</author>
						<title level="a" type="main">The Efficiency of Geometric Samplers for Exoplanet Transit Timing Variation Models</title>
					</analytic>
					<monogr>
						<title level="j" type="main">MNRAS</title>
						<imprint>
							<biblScope unit="volume">000</biblScope>
							<biblScope unit="page" from="1" to="9"/>
							<date type="published" when="2018">2018</date>
						</imprint>
					</monogr>
					<note type="submission">Accepted XXX. Received YYY; in original form ZZZ</note>
					<note>Preprint 1 August 2018 Compiled using MNRAS L A T E X style file v3.0</note>
				</biblStruct>
			</sourceDesc>
		</fileDesc>
		<profileDesc>
			<textClass>
				<keywords>planetary systems -planets and satellites: fundamental parameters -techniques: miscellaneous -methods: statistical 1 BACKGROUND</keywords>
			</textClass>
			<abstract>
				<p>Transit timing variations (TTVs) are a valuable tool to determine the masses and orbits of transiting planets in multi-planet systems. TTVs can be readily modeled given knowledge of the interacting planets&apos; orbital configurations and planet-star mass ratios , but such models are highly nonlinear and difficult to invert. Markov chain Monte Carlo (MCMC) methods are often used to explore the posterior distribution for model parameters, but, due to the high correlations between parameters, nonlinearity, and potential multi-modality in the posterior, many samplers perform very inefficiently. Therefore, we assess the performance of several MCMC samplers that use varying degrees of geometric information about the target distribution. We generate synthetic datasets from multiple models, including the TTVFaster model and a simple sinusoidal model, and test the efficiencies of various MCMC samplers. We find that sampling efficiency can be greatly improved for all models by sampling from a parameter space transformed using an estimate of the covariance and means of the target distribution. No one sampler performs the best for all datasets, but several samplers, such as Differential Evolution Monte Carlo and Geometric adaptive Monte Carlo, have consistently efficient performance. For datasets with near Gaussian posteriors, Hamiltonian Monte Carlo samplers with 2 or 3 leapfrog steps obtained the highest efficiencies. Based on differences in effective sample sizes per time, we show that the right choice of sampler can improve sampling efficiencies by several orders of magnitude.</p>
			</abstract>
		</profileDesc>
	</teiHeader>
	<text xml:lang="en">
		<body>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1">BACKGROUND</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.1">Astronomical Background</head><p>One of the main objectives in exoplanet science is to obtain a relationship between planetary masses and radii to determine the average densities of planets and constrain their probable compositions. In order to obtain a mass-radius relation, one would typically need both radial velocity and transit observations for each planet. In the radial velocity planet detection method, host star spectra are carefully monitored to detect the Doppler shifts caused by the motion of the star-planet system around their barycenter. This detection method determines the minimum mass of a planet required to cause the observed reflexive motion in its star, and allows for characterization of its orbit. Planets found via the Email: nxt5109@psu.edu transit technique are found via the dimming of their host stars as the planet passes in front of them. This gives us a measurement of the radius of the planet and its orbital period.</p><p>However, it is often the case that both techniques cannot be applied to the same system. Many radial velocity systems do not have the precise alignment needed to observe planets passing in front of their star. Similarly, many transiting systems are not suitable for radial velocity follow-up observations due to various causes, such as the faintness or noisiness of their host stars, making it challenging to obtain precise velocity measurements from their spectra.</p><p>Fortunately, there is another method for measuring exoplanet masses and radii for transiting multi-planet systems. The transit timing variation (TTV) method measures the discrepancies between observed times of transits and those projected from a Keplerian model <ref type="bibr" target="#b1">(Agol &amp; Fabrycky 2017;</ref><ref type="bibr">Holman et al. 2010)</ref>. Using the interactions between transiting planets near orbital resonances, one can obtain their masses and eccentricities. With the vast amount of data obtained by the Kepler mission, roughly 260 systems displaying significant long-term TTVs have been found ( <ref type="bibr">Lissauer et al. 2011;</ref><ref type="bibr" target="#b7">Holczer et al. 2016</ref>). However, it is often difficult to determine planetary properties from observed TTVs <ref type="bibr">(Jontof-Hutter et al. 2016</ref>). Dynamical models use planetary parameters to compute predicted transit times, but it is nontrivial to invert the problem to obtain planetary parameters from transit times.</p><p>Ideally, one would like to use N-body simulations to model the dynamical interactions between planets in TTV systems. For instance, the TTVFast model uses a symplectic N-body integrator to calculate TTVs from a given set of initial conditions <ref type="bibr" target="#b3">(Deck, Agol, Holman &amp; Nesvorn`Nesvorn`y 2014)</ref>. Because such N-body models are often computationally intensive and time consuming, an alternative approximate model, TTVFaster, was developed for systems near first order orbital resonances <ref type="bibr" target="#b0">(Agol &amp; Deck 2016)</ref>. This semianalytic model approximates TTVs using a series expansion and greatly reduces computation times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="1.2">Statistical Background</head><p>One of the main challenges in characterizing exoplanets with TTVs is that it is difficult to invert TTV models to obtain planetary properties. Previous studies to determine planetary masses and orbits from TTV data have been very time consuming (e.g. <ref type="bibr" target="#b2">Carter et al. 2012</ref>). In some cases, degenerate solutions for planetary masses and eccentricities were found to yield TTV predictions of similar statistical quality <ref type="bibr">(Jontof-Hutter et al. 2016</ref>). The posterior distributions for model parameters may also display multimodality, making it even more challenging to explore the parameter space.</p><p>Since even the simplest TTV models require exploring a 10+ dimensional parameter space, characterizing the model parameter space is a nontrivial matter with traditional Markov Chain Monte Carlo (MCMC) methods. The most basic form of MCMC we are concerned with is the Random Walk Metropolis-Hastings algorithm (e.g. <ref type="bibr" target="#b4">Ford 2005</ref>). This method samples from a target distribution by proposing new states of parameter values drawn from a proposal distribution that is centered on the current state. After each proposal, the prior and likelihood of the proposed state are calculated to determine whether to accept the proposal. The method used for proposing steps in the MCMC chain depends on the specific sampler used. Proposing steps with increased geometric knowledge of the target distribution will often allow one to sample much more efficiently <ref type="bibr" target="#b6">(Girolami &amp; Calderhead 2011)</ref>. For this reason, several samplers, such as the Metropolis-adjusted Langevin algorithm (MALA), choose a step based on the known gradient of the target distribution. Similarly, Hamiltonian Monte Carlo (HMC) proposes a state by integrating a Hamiltonian dynamical system based on the current position of the MCMC chain and the target gradient. HMC uses two tuning parameters, namely the integration step size and the number of leapfrog steps proposed.</p><p>There are also samplers designed to use an ensemble of MCMC chains to propose a new state. Samplers such as the Differential Evolution MCMC (DEMCMC) sampler do not require the gradient of the target distribution, but instead approximate the target distribution's shape using the difference in parameter values of random walkers in the ensemble <ref type="bibr">(Ter Braak 2006)</ref>.</p><p>Recently, samplers have been designed to use not only gradients, but also the Hessians of the target distribution. The simplified manifold Metropolis-adjusted Langevin algorithm (SMMALA) uses the Hessian of the target distribution to make efficient proposals for every step <ref type="bibr" target="#b6">(Girolami &amp; Calderhead 2011)</ref>. This method utilizes a large amount of geometric information, but computing the Hessian can be time consuming. For this reason, the Geometric adaptive Monte Carlo (GAMC) sampler was developed. GAMC uses the Hessian frequently at first, but gradually reduces the frequency of Hessian evaluations via an exponential schedule (Papamarkou, <ref type="bibr">Lindo &amp; Ford 2018)</ref>. GAMC is summarized briefly in Appendix A.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2">METHODS</head><p>We would like to develop a more streamlined and computationally efficient means of using MCMC methods to characterize exoplanets based on TTV observations. For this study, our goal was to compare the computational efficiency of multiple MCMC samplers when applied to characterize the posterior distributions for TTV models. We consider two main classes of models for exoplanet transit times: a simple sinusoidal model (SSM) and the semi-analytical TTVFaster models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1">Models</head><p>For both TTV models we choose a log-likelihood in the form:</p><formula xml:id="formula_0">log Lm(p|T) = − 1 2 χ 2 m − i∈Nm 1 2 log (2πσm,i)<label>(1)</label></formula><p>where</p><formula xml:id="formula_1">χ 2 m = i∈Nm τ m,i −T m,i σ m,i 2</formula><p>with m= 1, 2 denoting the inner and outer planets respectively. Here τm,i are the transit times calculated from the TTV model with parameters p, Tm,i are the measured transit times, and σm,i are the measurement uncertainties. The set of numbered transits observed for planet m is denoted as Nm. The total likelihood is obtained by summing the log-likelihoods, log Lm, for both planets.</p><p>In order to use more sophisticated samplers that use geometric information about the target distribution, we need to compute the first and second order partial derivatives of the log-likelihood. For both models, we use forward automatic differentiation with the "ForwardDiff.jl" package in Julia to calculate first and second order derivatives <ref type="bibr">(Rev- els et al. 2016</ref>). The SSM model's derivatives can be easily computed analytically or with low memory usage using forward automatic differentiation. However, for the TTVFaster model, we found that derivatives of the log-likelihood obtained purely via forward automatic differentiation were too slow and computationally inefficient, in some cases causing memory overflow errors. To resolve this problem, we instead used analytic chain rule differentiation to obtain gradients in the form</p><formula xml:id="formula_2">∂ ∂pi log Ltot = m=b,c k∈Nm 2(τ m,k − T m,k ) σ 2 m,k ∂τ m,k ∂pi (2)</formula><p>where</p><formula xml:id="formula_3">∂τ m,k ∂p i</formula><p>is the Jacobian of the TTVFaster output transit times for planet m with respect to model parameters, evaluated via forward auto-differentiation. Similarly Hessians are obtained via</p><formula xml:id="formula_4">∂ 2 log Ltot ∂pi∂pj = m=b,c k∈Nm 2 ∂τ m,k ∂pi ∂τ m,k ∂pj + 2(τ m,k − T m,k ) ∂ 2 τ m,k ∂pi∂pj /σ 2 m,k<label>(3)</label></formula></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.1">Simple Sinusoidal Model</head><p>As a stepping stone towards sampling from complicated TTV models, we first aim to understand how to sample efficiently for a simpler, but closely related model. The TTVFaster model calculates transit times from a series expansion around an orbital resonance, so it can ultimately be thought of as the sum of multiple sinusoids <ref type="bibr" target="#b0">(Agol &amp; Deck 2016)</ref>. Earlier models for exoplanet TTVs, such as that of Lithwick, <ref type="bibr">Xie &amp; Wu (2012)</ref>, modeled transit times analytically using a sinusoidal waveform. This motivated us to try a simple sinusoidal model (SSM), modeling transit times for each planet as a linear ephemerus plus a sinusoid at the fundamental frequency and its first harmonic term. </p><p>For two planets, this model has 12 parameters p = {ti,1, P1, A1, B1, C1, D1, ti,2, P2, A2, B2, C2, D2}, two more than the TTVFaster model. In equation 4, t lin,m is the linear ephemerus for planet m defined as t lin,m (Nm, p) = ti,m + (Nm − 1)Pm, where Pm and ti,m are model parameters and recall Nm is the set of observed transit numbers.</p><p>Here we define fT T V as fT T V = 2π/PT T V , and PT T V is the superperiod of TTV signals for a pair of planets near a β : α resonance given by</p><formula xml:id="formula_6">PT T V = (β/P2 − α/P1) −1 .</formula><p>To test samplers using this model, we simulated a dataset that was comparable to actual TTV data (see <ref type="figure" target="#fig_1">Fig  1)</ref>. Using recorded transit time data for Kepler-307, a wellbehaved TTV system with two planets close to a 5:4 resonance, we compute the best fitting SSM parameters for the data ( <ref type="bibr">Rowe et al. 2014</ref>). We generated a synthetic dataset for the SSM model using "true" parameters listed in <ref type="table" target="#tab_1">Table  2</ref>, adding 5 minutes of Gaussian white noise to each observation. For each of the model parameters, we used uniform priors for simplicity. In Section 3.1, we explore which of the various MCMC samplers are able to sample efficiently and accurately from the resulting posterior distribution.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.1.2">TTVFaster Model</head><p>The TTVFaster model uses a series expansion around orbital resonances in order to estimate TTVs for a given set of parameters. For both planets in the system, this model uses their planet-star mass ratios µ, orbital periods P , initial transit times ti, and eccentricity vector components k = e cos ω and h = e sin ω (where e is eccentricity and ω is the argument of periastron). With an input of these 10 model parameters pi to the TTVFaster model, we obtain outputs of τm(Nm, p) for the transit times of planets 1 and 2 at transit numbers Nm. In order to obtain first and second order derivatives of the TTVFaster model, we modified the TTVFaster code 1 to work in the framework of forward automatic differentiation using the "ForwardDiff.jl" package ( <ref type="bibr">Revels et al. 2016</ref>).</p><p>We specified priors for TTVFaster model parameters to ensure that MCMC chains will only accept proposals for physically plausible parameter values. Priors for masses and periods were uniform and bounded to be positive. We specify that the period for the inner planet must be shorter than that of the outer planet, and required orbital eccentricities to be less than 1. We used nearly uniform priors in initial transit times, constant to within half a period, and smoothed the edges by steep Gaussians in order to avoid discontinuities in the prior or its derivatives. Gaussian priors with mean 0.0 and standard deviation 0.1 were used for eccentricity vector components h and k, resulting in the eccentricity, e, being drawn from a Rayleigh distribution.</p><p>We generated multiple synthetic datasets using TTVFaster, based on actual TTV systems of varying complexity. Previous studies have characterized the posterior distributions of multiple TTV systems using more computationally expensive N-body models, so we chose systems based on the apparent complexity of their posteriors computed in Jontof- <ref type="bibr">Hutter et al. (2016)</ref>. First, we considered the Kepler-307 (KOI-1576) system, a two planet system near a 5:4 mean motion resonance. We generated synthetic datasets using TTVFaster with true parameters close to those of Kepler-307 (see <ref type="figure" target="#fig_2">Fig 2)</ref>, and simulated the times of transits which were observed in the <ref type="bibr">Rowe et al. (2014)</ref> dataset. For the Kepler-307 system, we made two datasets, one adding 5 minutes of Gaussian white noise to the data, close to the uncertainty in the actual data, and one with 15 minutes of Gaussian white noise.</p><p>We also generated a synthetic dataset using TTVFaster with true parameters inspired by the slightly more challenging Kepler-49 (KOI-248) system (see <ref type="figure" target="#fig_3">Fig 3)</ref>. The Kepler-49 system has 2 inner planets near a 3:2 orbital resonance, but also 2 outer planets that may slightly perturb the inner ones. In generating this dataset, we considered only the inner two planets, and simulated their interactions in the absence of the outer two. Previous studies showed that the masses and eccentricities for planets in this system were less well constrained than those of Kepler-307. We added 5.96 minutes of Gaussian white noise to these data, using the mean uncertainties for transit times in the observed dataset.</p><p>Finally we generate a synthetic dataset using true parameters inspired by those of the Kepler-57 (KOI-1270) system (see <ref type="figure" target="#fig_4">Fig 4)</ref>. Previous studies had difficulty constraining the planet masses and the posteriors for eccentricity h and k components showed bimodality. We added Gaussian white noise to the synthetic data, with a standard deviation of 6.90 given by the average uncertainty in the observed data. These datasets were used to test the efficiencies and accuracies of the MCMC samplers under consideration.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.2">Sampling and Tuning</head><p>We compared the performance of five types of samplers: the MALA, HMC , SMMALA, GAMC 2 , and DEMCMC samplers described in Section 1.2. To sample from the posterior distributions for each model, we used the framework and MCMC samplers provided within the "Klara.jl" package as well as the GAMC sampler in "GAMCSampler.jl".</p><p>Before determining which sampler yielded the most efficient sampling, we first needed to tune the key algorithmic parameter of each MCMC sampler to improve their efficiencies. We used several diagnostics to assess the efficiency when tuning the MCMC samplers. The simplest of these was to calculate the acceptance rates for pilot chains. The step size should be small enough that a substantial fraction of the proposed steps are accepted, but large enough that the proposals are significantly different, and do not only propose states which are very close to the current chain position. <ref type="figure" target="#fig_5">Fig 5</ref> shows an example of the acceptance rate versus the drift step size tuning parameter for the MALA sampler. Additionally, we calculated the autocorrelation length, λ, for each MCMC chain, which we define as the smallest value of lag required for the autocorrelation function to pass below a user defined threshold of 0.05 (see <ref type="figure" target="#fig_6">Fig 6)</ref>. We calculate the effective sample size (ESS) for each parameter by dividing the MCMC chain length by the autocorrelation length.</p><p>Our tuning process was as follows. Initially, we found values of the tuning parameters where acceptance rates were between 90% and 10%, and generated a logarithmically spaced array of tuning parameter values between these two extremes. We ran MCMC pilot chains (varying in length depending on the model) for each proposed sampler tuning parameter value, and recorded the acceptance rate as well as autocorrelation lengths (λ) and effective sample sizes. For a given MCMC chain, each model parameter has its own λ and ESS value, and we define λmax as the maximum of the λ values for the different model parameters. For each tuning parameter value, we compute λmax and set the tuning parameter to be the value that minimizes λmax. After adjusting the sampler tuning parameters, we ran longer MCMC chains to sample from the underlying target distribution. We assessed whether the samplers were effectively exploring parameter space using a diagnostic of minimum ESS over elapsed wall clock time.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="2.3">Coordinate Transform and Pilot Run</head><p>One of the problems we encountered when sampling from the posteriors of these models is that the different parameters typically have values vary by orders of magnitude. For example, planet-star mass ratios have magnitudes of order 10 −5 , but initial transit times take on values spanning roughly 10 2 days. This makes it difficult for samplers to propose reasonably sized steps to explore the posterior distribution efficiently. Another challenge is that posteriors for certain parameters, such as masses and eccentricities, are often highly correlated with each other, resulting in much slower convergence of Markov chains. Finally, some samplers, such as GAMC, require computing the Cholesky decomposition of the inverse Hessian, which can result in positive definite errors due to round-off errors in finite precision arithmetic.</p><p>To resolve all of these issues, we use a linear coordinate transform to both rotate and scale the parameter space. In many cases, a linear transformation can often result in a nearly uncorrelated parameter space with magnitudes of order unity. Therefore, we sample from a space of transformed parameters, z, related to model parameters by</p><formula xml:id="formula_7">z = ˜ Σ −1/2 (p − ˜ pmeans)<label>(5)</label></formula><p>where˜Σwhere˜ where˜Σ and˜pmeansand˜ and˜pmeans are estimates of the sample covariance matrix and parameter means respectively. (Note that for˜Σ for˜ for˜Σ −1/2 we take the lower triangular for the Cholesky decomposition).</p><p>Initially, we compute an estimate of the covariance matrix by taking the inverse of the negative Hessian matrix at the chain starting position and use the starting position of the chain as a rough estimate of the means. Applying these estimates in the transform, we then run a 500,000 iteration burn-in chain with the GAMC sampler. We update our estimates of both posterior covariances and means by computing the sample covariances and means of this longer pilot chain. This process can be repeated multiple times to get progressively better estimates of covariances and means.</p><p>To burn-in ensemble samplers like DEMCMC, we used a slightly different pilot run. We generated random starting points for each walker, drawing from a multivariate Gaussian with sample covariances and means calculated from the earlier single walker pilot chains. We ran the DEMCMC sampler for 50,000 generations to burn-in the chains for each walker in the ensemble prior to computing autocorrelation lengths and effective sample sizes.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3">RESULTS</head><p>For each model, we tested the DEMCMC, MALA, HMC, SMMALA, and GAMC samplers to evaluate how efficiently each sampled from the posterior distribution. Many samplers, such as MALA and SMMALA, only have a single step size tuning parameter, so their performance can be assessed after simply tuning the one parameter. The HMC sampler has two main tuning parameters: the leapfrog step size and number of steps, n, in the proposed chain. We tested efficiencies for different fixed numbers of leapfrog steps, tuning the step size parameter separately for each n. Similarly, the GAMC sampler has tuning parameters for the drift step size, as well as one for the exponential schedule used (see Appendix A). We tuned the GAMC step size parameter for update schedules starting at fixed numbers of iterations, k. For ensemble samplers like DEMCMC, the performance is insensitive to any step size scale parameter, so we assessed the performance with the default scale parameter.</p><p>To compare the efficiencies of the different samplers, we used two main measures of sampling efficiency. For each tuned sampler, we compute pilot chains for 10,000 iterations, starting at the position of the last iteration of the pilot runs used to burn-in the chains, and measure their elapsed run times. We diagnosed the efficiency of samplers using the mean effective sample size (ESS) divided by elapsed wall clock time, or the minimum effective sample size divided by wall clock time <ref type="bibr">3</ref> . Using the sampler with the highest efficiency, we proceeded to run longer MCMC chains for computing the posterior distributions. Since we are using synthetic datasets, we test whether the credible intervals of the posterior distributions include the true parameter values used to generate the dataset. <ref type="table">Table 1</ref> presents the results of the efficiency diagnostics for the SSM model, along with the elapsed times for 10,000 iteration MCMC chains and the tuned drift step size parameters (or equivalent) for each sampler. The HMC sampler with n = 2 leapfrog steps scores the best, with a minimum ESS per time that is significantly greater than those of the other samplers. Nevertheless, many of the other samplers, such as HMC with different numbers of steps and MALA, perform well and obtain large ESSs in relatively short elapsed times.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.1">Simple Sinusoidal Model</head><p>We observe that the samplers that use the Hessian of the target distribution take the longest to run. The SM-MALA sampler, which uses the Hessian at every step, takes about 10 times as long per step as the MALA sampler, but both algorithms obtain comparable ESS's, resulting in SM-MALA obtaining a much lower value for Min(ESS)/time. The GAMC sampler uses the Hessian on an exponentially decaying schedule, so, at the zero-th MCMC iteration (k = 0), it performs comparably to SMMALA. However, its speed dramatically increases at later iterations, when it primarily takes adaptive Metropolis (AM) steps and Hessian updates are much less frequent. After many iterations, the GAMC sampler runs faster than any of the gradient based samplers, but there is a trade off in effective sample size, as the AM steps are typically more correlated with each other than the SMMALA steps.</p><p>Using the HMC sampler with n = 2 leapfrog steps, we ran a 2,000,000 iteration MCMC chain to sample from the posterior distribution for the SSM. In the resulting chain, the 2D marginal posteriors appear as nearly Gaussian ellipsoids, and only the parameters for periods and times of first transit appear slightly correlated (ti,1 vs P1 and ti ,2 vs. P2). This smooth, nearly Gaussian posterior explains why many samplers resulted in such large Min(ESS)/time. In <ref type="table" target="#tab_1">Table 2</ref>, we compare the true values of parameters used to generate the dataset and the median values for parameters from the posterior distribution. For the times of first transits, periods, and outer planet's parameters, the true values are very close to those recovered from the posterior, falling within the central 68% credible interval (CI) of the median values. However, for parameters B2 and D2, the true values don't fall within 68% credible interval of the recovered values. This is not unexpected, as the noise added to the dataset changes which exact parameter values maximize the likelihood, and the inner planet has lower signal to noise than the outer planet.</p><p>3 Means and minimums here are over ESS values for each parameter</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2">TTVFaster Model</head></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.1">Kepler-307 (KOI-1576) Datasets</head><p>We analyzed two synthetic datasets inspired by observations of the well-behaved Kepler-307 system: one with 5 minutes of Gaussian white noise (similar to the uncertainty in actual datasets), and one with 15 minutes of Gaussian white noise. For the 5 minute noise model, the results of our diagnostics can be found in <ref type="table">Table 1</ref>. We can see that, similarly to the SSM model, the HMC (n = 2) sampler performs the best in terms of Min(ESS)/time. Other samplers such as MALA and HMC at n = 1 and n = 3 steps also appear to perform almost as well. We notice that, for all the samplers, these 10,000 iteration pilot chains had significantly longer run times than those for the SSM, because taking the gradient and Hessian of the TTVFaster model is much more computationally demanding. This is evident by the fact that the values for Min(ESS)/time are all significantly less than those for the SSM by about an order of magnitude or more. One can observe that the samplers which use the target Hessian the most, the SMMALA and GAMC (k = 0) samplers, take roughly 10 times longer to run than the other samplers, and don't result in a significantly larger ESS. This causes them to perform the worst, and they are likely better suited for sampling from more challenging posteriors.</p><p>For the Kepler-307 inspired dataset with 15 minutes of Gaussian white noise, the results of our diagnostics can be seen in <ref type="table">Table 1</ref>. The elapsed times are comparable to those of the 5 minute noise dataset, but effective sample sizes are somewhat diminished. We find that the MALA and HMC (n = 3) samplers achieve the highest sampling efficiency, followed by samplers such as HMC (n = 1), DEMCMC, and GAMC after one million iterations.</p><p>For the 5 and 15 minute noise Kepler-307 datasets, we ran longer MCMC runs to converge on the posterior distributions. <ref type="figure" target="#fig_7">Figure 7</ref> shows the posterior distribution for the 5 minute Gaussian white noise model (omitting nearly Gaussian Periods and times of first transits). The posterior for the 15 minute Gaussian white noise model appears very similar, but with less constrained parameter values. For both datasets, the 2-D marginal posteriors for many of the parameters are smooth ellipsoids and have marginal distributions that are close to Gaussian. Besides the correlation between orbital periods and times of first transits, seen in the SSM, this TTVFaster model displays strong correlations between the eccentricity components, h and k, of the two planets, as well as a weaker correlation between planet mass ratios. <ref type="table" target="#tab_2">Tables 3 and 4</ref> show the median values recovered from the posteriors of both models compared to the true values used to generate them. Most of the recovered values for both models fall within the central 68% CI of the true values, but for the 5 minute model, the value for µ2 is greater than the upper bound of the 68% CI of the true value, and ti,1 differs slightly by less than the amount of added noise. For the 15 minute noise model, the recovered value for µ1 falls just beneath the lower bound of the credible interval for the true values. Mass ratios for the inner planets are less well constrained than those of the outer planet in both models, likely due to the fact that the inner planet has lower signal to noise in both datasets. The uncertainties in h and k components are often larger than their magnitudes, result-ing in weak constraints on the eccentricities, despite strong constraints on the ratios of k2/k1 and h2/h1.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.2">Kepler-49 (KOI-248) Dataset</head><p>We present the results of our diagnostics for a dataset generated by a TTVFaster model with true parameters similar to those of Kepler-49 system in <ref type="table" target="#tab_3">Table 4</ref>. The step sizes that maximize sampling efficiency for many samplers are much smaller here than for the earlier models for <ref type="bibr">Kepler-307</ref>. Since the underlying distribution for this model is more irregular and challenging to sample from, the chains need to take smaller steps to reach reasonable acceptance rates and maximize effective sample sizes. According to the Min(ESS)/time diagnostic, GAMC performs the best after k = 50, 000 iterations. The reason that this diagnostic value is higher after 50,000 GAMC iterations than after one million is unclear, but perhaps the frequency of Hessian updates at k = 50, 000 allows the GAMC chains to sample most efficiently without sacrificing evaluation time. After k = 10 6 iterations, the minimum ESS per time is lower than that of k = 50, 000, but the mean ESS per time is higher, suggesting that one parameter may get stuck in a region of parameter space, and that Hessian evaluations help to get parameters unstuck. The DEMCMC sampler was almost as efficient as the GAMC sampler, while SMMALA and GAMC (k=0) display the worst efficiency due to the frequent computationally expensive Hessian evaluations. The samplers using only target gradients, HMC and MALA, also don't perform as efficiently as they did for earlier models.</p><p>The reasons for our decreased sampling efficiencies for some samplers can be seen in <ref type="figure" target="#fig_8">Figure 8</ref>. The ellipsoids in the 2D marginal distribution are abruptly truncated and drop off to zero probability at µ1 = 0 or µ2 = 0, resulting in a non-Gaussian posterior. This is due to the prior, which only allows physically meaningful positive mass ratios. We again see strong correlations between planet 1 and 2 masses and eccentricity components. In <ref type="table" target="#tab_4">Table 5</ref>, we can compare the median values recovered from the posterior to the true values. We can see that recovered values for masses of both planets are much more poorly constrained, with larger uncertainties than those of the Kepler-307 models, while the uncertainties for the eccentricity components are comparable. All of the true values fall within the central 68% CI of the recovered values, but some have large uncertainties, only allowing them to be roughly constrained.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="3.2.3">Kepler-57 (KOI-1270) Dataset</head><p>Lastly, we assess the performance of samplers on the TTVFaster model generated using true parameters close to those of the Kepler-57 system. <ref type="table" target="#tab_3">Table 4</ref> shows that GAMC (k = 50, 000) and DEMCMC have the highest sampler efficiencies in terms of Min(ESS)/time. Again GAMC's efficiency appears to decrease after many iterations, but its value for Mean(ESS)/time is maximized, suggesting that without Hessian updates some parameters can still be sampled very efficiently, but others get stuck in certain regions of parameter space. SMMALA and GAMC (k = 0) perform poorly due to the long Hessian computation time, while HMC appears to perform well with n between 3 to 7 steps.</p><p>We show the posterior sampled from running the DEM-CMC sampler with 30 walkers for 150,000 generations in <ref type="figure">Figure 9</ref>. Many of the marginal distributions appear to be skewed, and the 2-D marginals do not appear to be simple Gaussian ellipsoids, but rather show irregular curvature and nonlinear dependences between parameters. Eccentricity vector components are still highly correlated, but masses have a weaker correlation than those of the other models. This bizarre posterior distribution caused us to question whether our MCMC chains had truly converged, so we decided to try running another long MCMC chain using GAMC, the second best performing sampler. The results for the posterior obtained from the GAMC chain, were near identical to those of DEMCMC, so it appears that both of these algorithms result in consistent posterior samples and their chains have come close to converging on the true posterior distribution. <ref type="table" target="#tab_5">Table 6</ref> shows our recovered and true values for the model parameters. For many of the parameters, such as the inner planet mass ratios and eccentricity h and k components, the true values don't fall within the 68% CI of the recovered values, but rather appear just above its upper bound for most parameters. Since the masses and eccentricity components are highly correlated, it makes sense that a slight overestimate of one parameter would result in overestimates for the other parameters. The posterior for this dataset has a larger spread in values for the mass ratios than the other datasets, but eccentricities appear to have lower uncertainties and are better constrained than those of the other TTVFaster models.</p></div>
<div xmlns="http://www.tei-c.org/ns/1.0"><head n="4">DISCUSSION AND CONCLUSIONS</head><p>In this study, we compared the efficiency of several MCMC methods used to sample from the posterior distributions of parameters for modeling exoplanet transit timing variations (TTVs). We found that for all of our models, it helped tremendously to apply a linear transformation where we rotate and rescale the parameter space to obtain a transformed space in which the posterior is closer to a standard multivariate normal distribution (see Section 2.3). Without this transformation, the samplers which only use the target gradient, HMC and MALA, are only able to accept steps for tiny step sizes on the order of 10 −6 or less. This renders these samplers ineffective, as they are unable to produce a large enough effective sample size in a reasonable number of iterations. The DEMCMC sampler actually performs relatively well in an untransformed space, but applying the transformation increases the ESS by an order of magnitude. The SMMALA and GAMC (k = 0) samplers, which use Hessian updates most frequently, perform the best in the untransformed space in terms of Min(ESS)/time because knowledge of the target Hessian actually allows them to take reasonable step sizes. However, in the untransformed space, the GAMC sampler encounters numerical issues associated with Cholesky decompositions after many steps. When GAMC doesn't use use the target Hessian, it instead takes adaptive Metropolis steps. These steps use the Cholesky decomposition of the inverse of the last Hessian evaluation, but due to numerical roundoff errors, inverse Hessians are often not positive definite. Taking their Cholesky decompositions result in errors, and stabilizing against such errors risks dis-torting the transformation. Therefore, we use the coordinate transformation from Section 2.3 to avoid these problems and compare all the samplers on equal footing.</p><p>Starting with a simple model for TTVs, comprised of a sinusoid with a first harmonic term added to a linear ephemerus for each planet (see Equation <ref type="formula" target="#formula_5">(4)</ref>), we assessed the performance of the different samplers in sampling from the posterior. This simple sinusoidal model (SSM) has a nearly Gaussian posterior with a few correlated parameters, and the HMC sampler with n = 2 steps appears to have the best sampling efficiency. With such a posterior distribution, it is simple to apply the transformation and achieve a near Gaussian parameter space. Since the values of Min(ESS)/time in <ref type="table">Table 1</ref> are significantly larger than those of the other models, we conclude that this model is easier to sample from than the others.</p><p>The TTVFaster models based on the Kepler-307 system had similar results. The posterior distributions were smooth and ellipsoidal enough that they can readily be rotated and scaled to appear nearly uncorrelated and close to a standard multivariate normal distribution. The model with 5 minutes of Gaussian white noise also had HMC (n = 2) as the most efficient sampler, while the model with 15 minutes of Gaussian white noise found that MALA or HMC (n = 3) performed best.</p><p>For the Kepler-49 model, we found that the GAMC sampler performed the best after k = 50, 000 iterations. This model is more difficult to sample from than the other models, presumably because the posterior distribution is truncated at zero masses, so no amount of rotating and scaling can make the posterior appear Gaussian.</p><p>Lastly, for the Kepler-57 model, we found that both the DEMCMC sampler and GAMC after many iterations perform most efficiently in terms of Min(ESS) over wall clock time. The posterior distribution is skewed and several parameters exhibit nonlinear dependences with each other so it can't be transformed to appear Gaussian. Still, the best transformed parameter space for this model appears to be more easily sampled from than that of the Kepler 49 model, due to the larger step sizes that the chains can take.</p><p>Overall, we have used a variety of MCMC methods to sample from TTVFaster models to accurately recover the true values for multiple synthetic datasets. The speeds at which the different samplers converge on the posterior distribution vary substantially, but our best performing samplers only take hours to converge as opposed to the weeks that would be required to obtain a large enough effective sample size for the worst performing samplers in the untransformed space. No one sampler performs best for all datasets, but rather the relative efficiencies of samplers depend on how well the posterior can be transformed to appear Gaussian. In general, for a model such as TTVFaster, we would recommend applying our coordinate transform, detailed in Section 2.3, and using the GAMC or DEMCMC samplers. GAMC doesn't always perform better than the other samplers, but after more that 25,000 iterations, it consistently obtains large enough effective sample sizes to converge relatively rapidly. Similarly the DEMCMC sampler performs well, though not necessarily at the top, for all of the datasets, and its insensitivity to tuning parameters bypasses the difficulties found in tuning the other samplers.</p><p>In future studies, we would like to investigate how the length of the burn-in period for MCMC chains is affected by our choice of initial parameter values and which sampler we use. It is often the case that one doesn't have concrete initial guesses for model parameters other than the periods and times of first transits, so we would like to determine how rapidly each algorithm can find the region near the true values, with a sub-optimal starting position. We also aim to apply our MCMC methods to actual TTV datasets, and we would eventually like to assess the performance of these samplers for more precise and computationally intensive N-body models. With more efficient MCMC sampling methods, we hope to greatly reduce the computation time needed to characterize planetary systems using TTV models.  dom variables, called the random environment. B k follows Bernoulli distribution with probability s k := P (B k = 1). Depending on whether B k = 1 or B k = 0, the proposal kernel at the k-th iteration of GAMC is set to a geometric Langevin Monte Carlo or adaptive Metropolis proposal kernel, respectively. The sequence of probabilites {s k } determines the frequency of using a geometric kernel. In this paper, the probabilities s k is set to where r is a positive-valued tuning hyperparameter. Larger values of r in (A1) result in faster reduction in the probability of taking geometric steps. For the GAMC samplers we test, we hold r constant at r = 2.0 * 10 −5 and observe their performance starting at the k-th iteration.   0.000220712 −0.00007 ± 0.00040       </p><formula xml:id="formula_8">s k = exp (−rk),<label>(A1)</label></formula></div><figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_0"><head></head><label></label><figDesc>τm(Nm, p) = t lin,m + Am sin (fT T V t lin,m ) + Bm cos (fT T V t lin,m )+ Cm sin (2fT T V t lin,m ) + Dm cos (2fT T V t lin,m )</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_1"><head>Figure 1 .</head><label>1</label><figDesc>Figure 1. Simulated dataset from the simple sinusoidal model (SSM). Model with true parameters shown in red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_2"><head>Figure 2 .</head><label>2</label><figDesc>Figure 2. Simulated dataset from TTVFaster based on the Kepler-307 (KOI-1576) system with 5 min of added Gaussian white noise. Model with true parameters shown in red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_3"><head>Figure 3 .</head><label>3</label><figDesc>Figure 3. Simulated dataset from TTVFaster based on the Kepler-49 (KOI-248) system. Model with true parameters shown in red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_4"><head>Figure 4 .</head><label>4</label><figDesc>Figure 4. Simulated dataset from TTVFaster based on the Kepler-57 (KOI-1270) system. Model with true parameters shown in red.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_5"><head>Figure 5 .</head><label>5</label><figDesc>Figure 5. Acceptance rate as a function of MALA step size tuning parameters. This example used 5,000 iteration pilot MCMC chains on the Kepler-307 (5 min) TTVFaster model.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_6"><head>Figure 6 .</head><label>6</label><figDesc>Figure 6. Autocorrelation Functions for parameter µ 1 for the Kepler-307 inspired TTVFaster model. Absolute values of autocorrelation functions are shown here for MCMC chains from different tuned samplers. The autocorrelation length is defined as the intercept between the autocorrelation function and a user defined threshold (in this case 0.05). Autocorrelation lengths for µ 1 for the HMC(n = 3), MALA, GAMC(k = 0) and GAMC(k = 10 6 ) samplers are [3,11,45,51] respectively.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_7"><head>Figure 7 .</head><label>7</label><figDesc>Figure 7. Corner plot showing the posterior distribution for the Kepler-307 (KOI-1576) TTVFaster model with 5 minutes of noise. This chain used the tuned HMC (n = 2) sampler on a transformed parameter space and ran for 2 million iterations with a 500,000 iteration burn-in period. Figure created using corner.py package (Foreman-Mackey 2016).</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" xml:id="fig_8"><head>Figure 8 .</head><label>8</label><figDesc>Figure 8. Corner plot showing the posterior distribution for the Kepler-49 (KOI-248) TTVFaster model. This chain used the tuned GAMC sampler on a transformed parameter space and ran for 5 million iterations with a 500,000 iteration burn-in period.</figDesc></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_0" validated="false"><head>Table 1 . Diagnostics for sampler efficiencies for TTV Models. ESS refers to effective sample size. Elapsed Times are for 10,000 iteration runs. Sampler Step size Elapsed Time (s) Mean(ESS)/time Min(ESS)/timeTable 1 -continued Diagnostics for sampler efficiencies for TTV Models. ESS refers to effective sample size. Elapsed Times are for 10,000 iteration runs.</head><label>11</label><figDesc></figDesc><table>Simple Sinusoidal Model 

HMC(n = 1) 
1.03 
7.8 
249. 
214. 
HMC(n = 2) 
0.918 
13.3 
750. 
750. 
HMC(n = 3) 
0.736 
19.1 
167. 
131. 
HMC(n = 5) 
0.822 
31.6 
158. 
158. 
HMC(n = 7) 
1.15 
40.6 
246. 
246. 
MALA 
1.10 
7.6 
263. 
263. 
SMMALA 
0.953 
79.9 
24.3 
20.9 
GAMC(k = 0) 
1.15 
56.7 
12.3 
9.80 
GAMC(k = 25000) 
0.527 
3.3 
74.8 
52.9 
GAMC(k = 50000) 
1.03 
2.6 
67.8 
43.3 
GAMC(k = 10 6 ) 
0.736 
2.6 
85.7 
56.8 
DEMCMC 
* 
60.1 
113. 
109. 

Kepler-307 (5 min) model 

HMC(n = 1) 
0.918 
52.6 
27.5 
19.0 
HMC(n = 2) 
0.822 
88.5 
71.6 
37.7 
HMC(n = 3) 
0.717 
119.8 
27.8 
27.8 
HMC(n = 5) 
0.736 
187.4 
13.1 
10.7 
HMC(n = 7) 
1.03 
254.3 
6.56 
4.92 
MALA 
0.974 
56.8 
28.3 
25.2 
SMMALA 
0.464 
2873.5 
0.205 
0.134 
GAMC(k = 0) 
0.88 
1824.7 
0.235 
0.157 
GAMC(k = 25000) 
0.88 
37.2 
4.46 
3.12 
GAMC(k = 50000) 
0.88 
22.6 
10.8 
7.14 
GAMC(k = 10 6 ) 
0.88 
23.0 
11.3 
9.45 
DEMCMC 
* 
614.6 
10.3 
9.07 

Kepler-307 (15 min) model 

HMC(n = 1) 
1.15 
51.6 
15.3 
6.46 
HMC(n = 2) 
0.838 
81.0 
25.8 
2.17 
HMC(n = 3) 
0.755 
113.9 
66.4 
9.75 
HMC(n = 5) 
0.838 
156.6 
8.42 
2.78 
HMC(n = 7) 
0.755 
222.1 
3.25 
2.05 
MALA 
0.550 
51.2 
16.2 
10.9 
SMMALA 
0.755 
2943.7 
0.224 
0.110 
GAMC(k = 0) 
0.402 
1841.7 
0.187 
0.132 
GAMC(k = 25000) 
0.550 
41.6 
5.01 
3.82 
GAMC(k = 50000) 
0.612 
22.4 
7.55 
3.31 
GAMC(k = 10 6 ) 
1.42 
22.4 
8.50 
6.20 
DEMCMC 
* 
609.4 
8.93 
6.47 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_1" validated="false"><head>Table 2 .</head><label>2</label><figDesc></figDesc><table>True values used to generate the synthetic dataset and 
summary statistics for SSM model parameter values. 

Parameter True Value 
Recovered 

t i,1 
783.9985 
783.9981 ± 0.0005 
P 1 
10.500011 
10.500013 ± 0.000004 
A 1 
0.0034 
0.0036 ± 0.0003 
B 1 
0.0070 
0.0064 ± 0.0003 
C 1 
−5.87  *  10 −5 
(−3.2 ± 3.4)  *  10 −4 
D 1 
0.0004 
0.0011 ± 0.0003 
t i,2 
785.000061 
784.9996 ± 0.0006 
P 2 
13.000001 
13.000006 ± 0.000007 
A 2 
-0.0077 
−0.0075 ± 0.0004 
B 2 
-0.0192 
−0.0195 ± 0.0004 
C 2 
-0.000337754 
−0.0007 ± 0.0004 
D 2 
</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_2" validated="false"><head>Table 3 .</head><label>3</label><figDesc></figDesc><table>True values for Kepler-307 (5 min noise) model and 
summary statistics from the posterior distribution in Figure 7. 

Parameter True Value 
Recovered 

µ 1 
2.4024  *  10 −5 
(2.31 +0.15 
−0.16 )  *  10 −5 
P 1 
10.500000 
10.500011 ± 0.000004 
t i,1 
784.0000 
783.9985 ± 0.0005 
k 1 
-0.040 
−0.025 ± 0.073 
h 1 
-0.011 
0.012 +0.069 

−0.070 

µ 2 
1.2012  *  10 −5 
(1.05 +0.09 
−0.08 )  *  10 −5 
P 2 
13.000000 
13.000000 +0.000006 

−0.000007 

t i,2 
785.0000 
785.0002 ± 0.0006 
k 2 
-0.029 
−0.015 ± 0.066 
h 2 
-0.004 
0.017 +0.063 

−0.064 

</table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_3" validated="false"><head>Table 4 .</head><label>4</label><figDesc></figDesc><table>True values for noisier Kepler-307 (15 min noise) model 
and summary statistics from the posterior distribution. 

Parameter True Value 
Recovered 

µ 1 
2.4024  *  10 −5 
(2.94 ± 0.48)  *  10 −5 
P 1 
10.500000 
10.50000 ± 0.00001 
t i,1 
784.0000 
784.000 ± 0.001 
k 1 
-0.040 
−0.000 ± 0.074 
h 1 
-0.011 
0.003 ± 0.073 
µ 2 
1.2012  *  10 −5 
(1.23 +0.26 
−0.23 )  *  10 −5 
P 2 
13.000000 
12.99999 ± 0.00002 
t i,2 
785.0000 
785.000 ± 0.002 
k 2 
-0.029 
0.005 ± 0.066 
h 2 
-0.004 
0.009 ± 0.066 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_4" validated="false"><head>Table 5 .</head><label>5</label><figDesc></figDesc><table>True values for Kepler-49 model and summary statistics 
from the posterior distribution in Figure 8. 

Parameter True Value Recovered 

µ 1 
2.75  *  10 −5 
(2.0 +1.9 
−1.3 )  *  10 −5 
P 1 
7.204000 
7.204005 ± 0.000009 
t i,1 
780.4530 
780.4526 ± 0.0004 
k 1 
0.037 
0.006 ± 0.077 
h 1 
-0.011 
−0.013 ± 0.077 
µ 2 
1.77  *  10 −5 
(1.2 +1.3 
−0.8 )  *  10 −5 
P 2 
10.9123 
10.91228 ± 0.00002 
t i,2 
790.347 
790.3468 ± 0.0006 
k 2 
0.027 
−0.010 +0.063 

−0.064 

h 2 
-0.006 
−0.003 +0.062 

−0.063 </table></figure>
<figure xmlns="http://www.tei-c.org/ns/1.0" type="table" xml:id="tab_5" validated="false"><head>Table 6 .</head><label>6</label><figDesc></figDesc><table>True values for Kepler-57 model and summary statistics 
from the posterior distribution in Figure 9. 

Parameter True Value 
Recovered 

µ 1 
8.35  *  10 −5 
(5.4 +2.7 
−2.2 )  *  10 −5 
P 1 
5.729500 
5.729491 ± 0.000008 
t i,1 
781.9966 
781.9956 ± 0.0005 
k 1 
-0.019 
−0.042 +0.016 

−0.022 

h 1 
-0.018 
−0.030 +0.011 

−0.015 

µ 2 
1.98799  *  10 −5 
(1.6 +0.9 
−0.8 )  *  10 −5 
P 2 
11.60650 
11.60649 ± 0.00002 
t i,2 
786.7562 
786.7569 ± 0.0007 
k 2 
-0.036 
−0.092 +0.043 

−0.053 

h 2 
-0.030 
−0.054 +0.028 

−0.032 </table></figure>

			<note place="foot">MNRAS 000, 1-9 (2018)</note>

			<note place="foot" n="1"> https://github.com/nwtuchow/TTVFaster.git MNRAS 000, 1-9 (2018)</note>

			<note place="foot" n="2"> With an exponential decay update schedule (r=1/50000)</note>

			<note place="foot">This paper has been typeset from a T E X/L A T E X file prepared by the author. MNRAS 000, 1-9 (2018)</note>
		</body>
		<back>

			<div type="acknowledgement">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>ACKNOWLEDGEMENTS</head><p>EBF and NWT acknowledge the support of the Institute for CyberScience and the Center for Exoplanets and Habitable Worlds, which is supported by The Pennsylvania State University, the Eberly College of Science, and the Pennsylvania Space Grant Consortium. EBF and NWT were supported from NSF grant AST1616086, and NWT acknowledges support from the Penn State Center for Astrostatistics.</p></div>
			</div>

			<div type="annex">
<div xmlns="http://www.tei-c.org/ns/1.0"><head>APPENDIX A: GAMC SAMPLER</head><p>The geometric adaptive Monte Carlo (GAMC) sampler was recently introduced by Papamarkou, <ref type="bibr">Lindo &amp; Ford (2018)</ref>. This appendix provides a brief overview of GAMC.</p><p>The main goal of GAMC is to balance the exploitation of the local geometry of the parameter space with total computational time. This act of balance is achieved by sampling in a random environment. The random environment regulates the switching between local geometric and adaptive proposal kernels via a schedule. An exponential schedule enables more frequent use of local geometric information in early iterations of the chain, while saving computational time in late iterations. The average complexity can be manually set via a hyperparameter associated with the exponential schedule.</p><p>GAMC relies on a sequence {B k } of IID binary ran-</p></div>			</div>
			<div type="references">

				<listBibl>

<biblStruct xml:id="b0">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Agol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><surname>Deck</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astrophysical Journal</title>
		<imprint>
			<biblScope unit="volume">818</biblScope>
			<biblScope unit="page">177</biblScope>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b1">
	<monogr>
		<title level="m" type="main">Transit-Timing and Duration Variations for the Discovery and Characterization of Exoplanets</title>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Agol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><forename type="middle">C</forename><surname>Fabrycky</surname></persName>
		</author>
		<idno type="doi">doi:10.1007/978-3-319-30648-37-1</idno>
		<ptr target="https://doi.org/10.1007/978-3-319-30648-3_7-1" />
		<imprint>
			<date type="published" when="2017" />
			<publisher>Springer International Publishing</publisher>
			<biblScope unit="page" from="1" to="20" />
			<pubPlace>Cham</pubPlace>
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b2">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">J</forename><forename type="middle">A</forename><surname>Carter</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Science</title>
		<imprint>
			<biblScope unit="volume">337</biblScope>
			<biblScope unit="page">556</biblScope>
			<date type="published" when="2012" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b3">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">K</forename><forename type="middle">M</forename><surname>Deck</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><surname>Agol</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><forename type="middle">J</forename><surname>Holman</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">`</forename><surname>Nesvorn`nesvorn</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astrophysical Journal</title>
		<imprint>
			<biblScope unit="volume">787</biblScope>
			<biblScope unit="page">132</biblScope>
			<date type="published" when="2014" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b4">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">E</forename><forename type="middle">B</forename><surname>Ford</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astronomical Journal</title>
		<imprint>
			<biblScope unit="volume">129</biblScope>
			<biblScope unit="page">1706</biblScope>
			<date type="published" when="2005" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b5">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">D</forename><surname>Foreman-Mackey</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Journal of Open Source Software</title>
		<imprint>
			<biblScope unit="page">24</biblScope>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b6">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">M</forename><surname>Girolami</surname></persName>
		</author>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">B</forename><surname>Calderhead</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">Journal of the Royal Statistical Society: Series B (Statistical Methodology)</title>
		<imprint>
			<biblScope unit="volume">73</biblScope>
			<biblScope unit="page">123</biblScope>
			<date type="published" when="2011" />
		</imprint>
	</monogr>
</biblStruct>

<biblStruct xml:id="b7">
	<analytic>
		<title/>
		<author>
			<persName xmlns="http://www.tei-c.org/ns/1.0"><forename type="first">T</forename><surname>Holczer</surname></persName>
		</author>
	</analytic>
	<monogr>
		<title level="j">The Astrophysical Journal Supplement Series</title>
		<imprint>
			<biblScope unit="volume">225</biblScope>
			<biblScope unit="page">9</biblScope>
			<date type="published" when="2016" />
		</imprint>
	</monogr>
</biblStruct>

				</listBibl>
			</div>
		</back>
	</text>
</TEI>
